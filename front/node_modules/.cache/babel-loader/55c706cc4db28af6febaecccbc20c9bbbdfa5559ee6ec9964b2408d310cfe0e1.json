{"ast":null,"code":"import { otherRouter } from '@/router/router';\nimport { router } from '@/router/index';\nimport Util from '@/libs/util';\nimport Cookies from 'js-cookie';\nimport Vue from 'vue';\nconst app = {\n  state: {\n    loading: false,\n    // 全局加载动画\n    added: false,\n    // 加载路由标识\n    navList: [],\n    // 顶部菜单\n    currNav: \"\",\n    // 当前顶部菜单name\n    currNavTitle: \"\",\n    // 当前顶部菜单标题\n    cachePage: [],\n    lang: '',\n    isFullScreen: false,\n    openedSubmenuArr: [],\n    // 要展开的菜单数组\n    menuTheme: 'light',\n    // 主题\n    themeColor: '',\n    pageOpenedList: [{\n      title: '首页',\n      path: '',\n      name: 'home_index'\n    }],\n    currentPageName: '',\n    currentPath: [{\n      title: '首页',\n      path: '',\n      name: 'home_index'\n    }],\n    // 面包屑数组\n    menuList: [],\n    routers: [otherRouter],\n    tagsList: [...otherRouter.children],\n    messageCount: 0,\n    // 在这里定义你不想要缓存的页面的name属性值(参见路由配置router.js)\n    dontCache: ['test', 'test']\n  },\n  mutations: {\n    // 动态添加主界面路由，需要缓存\n    updateAppRouter(state, routes) {\n      state.routers.push(...routes);\n      router.addRoutes(routes);\n    },\n    // 动态添加全局路由404、500等页面，不需要缓存\n    updateDefaultRouter(state, routes) {\n      router.addRoutes(routes);\n    },\n    setLoading(state, v) {\n      state.loading = v;\n    },\n    setAdded(state, v) {\n      state.added = v;\n    },\n    setNavList(state, list) {\n      state.navList = list;\n    },\n    setCurrNav(state, v) {\n      state.currNav = v;\n    },\n    setCurrNavTitle(state, v) {\n      state.currNavTitle = v;\n    },\n    setTagsList(state, list) {\n      state.tagsList.push(...list);\n    },\n    updateMenulist(state, routes) {\n      state.menuList = routes;\n    },\n    addOpenSubmenu(state, name) {\n      let hasThisName = false;\n      let isEmpty = false;\n      if (name.length == 0) {\n        isEmpty = true;\n      }\n      if (state.openedSubmenuArr.indexOf(name) > -1) {\n        hasThisName = true;\n      }\n      if (!hasThisName && !isEmpty) {\n        state.openedSubmenuArr.push(name);\n      }\n    },\n    closePage(state, name) {\n      state.cachePage.forEach((item, index) => {\n        if (item == name) {\n          state.cachePage.splice(index, 1);\n        }\n      });\n    },\n    initCachepage(state) {\n      if (localStorage.cachePage) {\n        state.cachePage = JSON.parse(localStorage.cachePage);\n      }\n    },\n    removeTag(state, name) {\n      state.pageOpenedList.map((item, index) => {\n        if (item.name == name) {\n          state.pageOpenedList.splice(index, 1);\n        }\n      });\n    },\n    pageOpenedList(state, get) {\n      let openedPage = state.pageOpenedList[get.index];\n      if (get.argu) {\n        openedPage.argu = get.argu;\n      }\n      if (get.query) {\n        openedPage.query = get.query;\n      }\n      state.pageOpenedList.splice(get.index, 1, openedPage);\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    clearAllTags(state) {\n      state.pageOpenedList.splice(1);\n      state.cachePage.length = 0;\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    clearOtherTags(state, vm) {\n      let currentName = vm.$route.name;\n      let currentIndex = 0;\n      state.pageOpenedList.forEach((item, index) => {\n        if (item.name == currentName) {\n          currentIndex = index;\n        }\n      });\n      if (currentIndex == 0) {\n        state.pageOpenedList.splice(1);\n      } else {\n        state.pageOpenedList.splice(currentIndex + 1);\n        state.pageOpenedList.splice(1, currentIndex - 1);\n      }\n      let newCachepage = state.cachePage.filter(item => {\n        return item == currentName;\n      });\n      state.cachePage = newCachepage;\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    setOpenedList(state) {\n      state.pageOpenedList = localStorage.pageOpenedList ? JSON.parse(localStorage.pageOpenedList) : [otherRouter.children[0]];\n    },\n    setCurrentPath(state, pathArr) {\n      state.currentPath = pathArr;\n    },\n    setCurrentPageName(state, name) {\n      state.currentPageName = name;\n    },\n    setAvatarPath(state, path) {\n      localStorage.avatorImgPath = path;\n    },\n    switchLang(state, lang) {\n      state.lang = lang;\n      localStorage.lang = lang;\n      Vue.config.lang = lang;\n    },\n    clearOpenedSubmenu(state) {\n      state.openedSubmenuArr.length = 0;\n    },\n    setMessageCount(state, count) {\n      state.messageCount = count;\n    },\n    increateTag(state, tagObj) {\n      if (!Util.oneOf(tagObj.name, state.dontCache)) {\n        state.cachePage.push(tagObj.name);\n        localStorage.cachePage = JSON.stringify(state.cachePage);\n      }\n      state.pageOpenedList.push(tagObj);\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    }\n  }\n};\nexport default app;","map":{"version":3,"names":["otherRouter","router","Util","Cookies","Vue","app","state","loading","added","navList","currNav","currNavTitle","cachePage","lang","isFullScreen","openedSubmenuArr","menuTheme","themeColor","pageOpenedList","title","path","name","currentPageName","currentPath","menuList","routers","tagsList","children","messageCount","dontCache","mutations","updateAppRouter","routes","push","addRoutes","updateDefaultRouter","setLoading","v","setAdded","setNavList","list","setCurrNav","setCurrNavTitle","setTagsList","updateMenulist","addOpenSubmenu","hasThisName","isEmpty","length","indexOf","closePage","forEach","item","index","splice","initCachepage","localStorage","JSON","parse","removeTag","map","get","openedPage","argu","query","stringify","clearAllTags","clearOtherTags","vm","currentName","$route","currentIndex","newCachepage","filter","setOpenedList","setCurrentPath","pathArr","setCurrentPageName","setAvatarPath","avatorImgPath","switchLang","config","clearOpenedSubmenu","setMessageCount","count","increateTag","tagObj","oneOf"],"sources":["D:/TravelRecommendation/front/src/store/modules/app.js"],"sourcesContent":["import { otherRouter } from '@/router/router';\r\nimport { router } from '@/router/index';\r\nimport Util from '@/libs/util';\r\nimport Cookies from 'js-cookie';\r\nimport Vue from 'vue';\r\n\r\nconst app = {\r\n    state: {\r\n        loading: false, // 全局加载动画\r\n        added: false, // 加载路由标识\r\n        navList: [], // 顶部菜单\r\n        currNav: \"\", // 当前顶部菜单name\r\n        currNavTitle: \"\", // 当前顶部菜单标题\r\n        cachePage: [],\r\n        lang: '',\r\n        isFullScreen: false,\r\n        openedSubmenuArr: [], // 要展开的菜单数组\r\n        menuTheme: 'light', // 主题\r\n        themeColor: '',\r\n        pageOpenedList: [{\r\n            title: '首页',\r\n            path: '',\r\n            name: 'home_index'\r\n        }],\r\n        currentPageName: '',\r\n        currentPath: [\r\n            {\r\n                title: '首页',\r\n                path: '',\r\n                name: 'home_index'\r\n            }\r\n        ], \r\n        // 面包屑数组\r\n        menuList: [],\r\n        routers: [\r\n            otherRouter\r\n        ],\r\n        tagsList: [...otherRouter.children],\r\n        messageCount: 0,\r\n        // 在这里定义你不想要缓存的页面的name属性值(参见路由配置router.js)\r\n        dontCache: ['test', 'test']\r\n    },\r\n    mutations: {\r\n        // 动态添加主界面路由，需要缓存\r\n        updateAppRouter(state, routes) {\r\n            state.routers.push(...routes);\r\n            router.addRoutes(routes);\r\n        },\r\n        // 动态添加全局路由404、500等页面，不需要缓存\r\n        updateDefaultRouter(state, routes) {\r\n            router.addRoutes(routes);\r\n        },\r\n        setLoading(state, v) {\r\n            state.loading = v;\r\n        },\r\n        setAdded(state, v) {\r\n            state.added = v;\r\n        },\r\n        setNavList(state, list) {\r\n            state.navList = list;\r\n        },\r\n        setCurrNav(state, v) {\r\n            state.currNav = v;\r\n        },\r\n        setCurrNavTitle(state, v) {\r\n            state.currNavTitle = v;\r\n        },\r\n        setTagsList(state, list) {\r\n            state.tagsList.push(...list);\r\n        },\r\n        updateMenulist(state, routes) {\r\n            state.menuList = routes;\r\n        },\r\n        addOpenSubmenu(state, name) {\r\n            let hasThisName = false;\r\n            let isEmpty = false;\r\n            if (name.length == 0) {\r\n                isEmpty = true;\r\n            }\r\n            if (state.openedSubmenuArr.indexOf(name) > -1) {\r\n                hasThisName = true;\r\n            }\r\n            if (!hasThisName && !isEmpty) {\r\n                state.openedSubmenuArr.push(name);\r\n            }\r\n        },\r\n        closePage(state, name) {\r\n            state.cachePage.forEach((item, index) => {\r\n                if (item == name) {\r\n                    state.cachePage.splice(index, 1);\r\n                }\r\n            });\r\n        },\r\n        initCachepage(state) {\r\n            if (localStorage.cachePage) {\r\n                state.cachePage = JSON.parse(localStorage.cachePage);\r\n            }\r\n        },\r\n        removeTag(state, name) {\r\n            state.pageOpenedList.map((item, index) => {\r\n                if (item.name == name) {\r\n                    state.pageOpenedList.splice(index, 1);\r\n                }\r\n            });\r\n        },\r\n        pageOpenedList(state, get) {\r\n            let openedPage = state.pageOpenedList[get.index];\r\n            if (get.argu) {\r\n                openedPage.argu = get.argu;\r\n            }\r\n            if (get.query) {\r\n                openedPage.query = get.query;\r\n            }\r\n            state.pageOpenedList.splice(get.index, 1, openedPage);\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        clearAllTags(state) {\r\n            state.pageOpenedList.splice(1);\r\n            state.cachePage.length = 0;\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        clearOtherTags(state, vm) {\r\n            let currentName = vm.$route.name;\r\n            let currentIndex = 0;\r\n            state.pageOpenedList.forEach((item, index) => {\r\n                if (item.name == currentName) {\r\n                    currentIndex = index;\r\n                }\r\n            });\r\n            if (currentIndex == 0) {\r\n                state.pageOpenedList.splice(1);\r\n            } else {\r\n                state.pageOpenedList.splice(currentIndex + 1);\r\n                state.pageOpenedList.splice(1, currentIndex - 1);\r\n            }\r\n            let newCachepage = state.cachePage.filter(item => {\r\n                return item == currentName;\r\n            });\r\n            state.cachePage = newCachepage;\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        setOpenedList(state) {\r\n            state.pageOpenedList = localStorage.pageOpenedList ? JSON.parse(localStorage.pageOpenedList) : [otherRouter.children[0]];\r\n        },\r\n        setCurrentPath(state, pathArr) {\r\n            state.currentPath = pathArr;\r\n        },\r\n        setCurrentPageName(state, name) {\r\n            state.currentPageName = name;\r\n        },\r\n        setAvatarPath(state, path) {\r\n            localStorage.avatorImgPath = path;\r\n        },\r\n        switchLang(state, lang) {\r\n            state.lang = lang;\r\n            localStorage.lang = lang;\r\n            Vue.config.lang = lang;\r\n        },\r\n        clearOpenedSubmenu(state) {\r\n            state.openedSubmenuArr.length = 0;\r\n        },\r\n        setMessageCount(state, count) {\r\n            state.messageCount = count;\r\n        },\r\n        increateTag(state, tagObj) {\r\n            if (!Util.oneOf(tagObj.name, state.dontCache)) {\r\n                state.cachePage.push(tagObj.name);\r\n                localStorage.cachePage = JSON.stringify(state.cachePage);\r\n            }\r\n            state.pageOpenedList.push(tagObj);\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        }\r\n    }\r\n};\r\n\r\nexport default app;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}