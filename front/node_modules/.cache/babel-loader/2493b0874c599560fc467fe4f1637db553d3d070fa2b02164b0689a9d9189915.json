{"ast":null,"code":"import { getFileListData, copyFile, renameFile, deleteFile, getOneSetting, setOneSetting } from \"./api.js\";\nimport \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nvar dp;\nexport default {\n  name: \"oss-manage\",\n  data() {\n    return {\n      filePath: \"\",\n      fileHttp: \"\",\n      fileView: \"\",\n      fileSaveSettingModal: false,\n      accessToken: {},\n      // 上传token鉴权\n      loading: false,\n      // 表单加载状态\n      drop: false,\n      dropDownContent: \"展开\",\n      dropDownIcon: \"ios-arrow-down\",\n      fileType: \"all\",\n      changeFileNameModal: false,\n      // 添加或编辑显示\n      uploadVisible: false,\n      picVisible: false,\n      picTitle: \"\",\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        fkey: \"\",\n        type: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 15,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\",\n        // 默认排序方式\n        startDate: \"\",\n        // 起始时间\n        endDate: \"\" // 终止时间\n      },\n      selectDate: null,\n      // 选择日期绑定modal\n      form: {\n        name: \"\",\n        fkey: \"\"\n      },\n      file: {},\n      // 表单验证规则\n      formValidate: {\n        name: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        fkey: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      selectList: [],\n      selectCount: 0,\n      totalSize: \"\",\n      columns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"原文件名\",\n        key: \"name\",\n        minWidth: 130,\n        sortable: true\n      }, {\n        title: \"存储文件名\",\n        key: \"fkey\",\n        minWidth: 165,\n        sortable: true\n      }, {\n        title: \"预览\",\n        key: \"url\",\n        minWidth: 150,\n        align: \"center\",\n        render: (h, params) => {\n          if (params.row.type.includes(\"image\") > 0) {\n            return h(\"img\", {\n              attrs: {\n                src: params.row.url\n              },\n              style: {\n                cursor: \"zoom-in\",\n                width: \"80px\",\n                height: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showPic(params.row);\n                }\n              }\n            });\n          } else if (params.row.type.includes(\"pdf\") > 0) {\n            return h(\"img\", {\n              attrs: {\n                src: require(\"@/assets/pdf.png\")\n              },\n              style: {\n                cursor: \"zoom-in\",\n                width: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showFile(params.row);\n                }\n              }\n            });\n          } else if (params.row.type.includes(\"zip\") > 0 || params.row.type.includes(\"rar\") > 0 || params.row.type.includes(\"7z\") > 0) {\n            return h(\"img\", {\n              attrs: {\n                src: require(\"@/assets/zip.png\")\n              },\n              style: {\n                width: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showFile(params.row);\n                  this.$Message.warning(\"请下载后解压访问!\");\n                }\n              }\n            });\n          } else {\n            return h(\"img\", {\n              attrs: {\n                src: require(\"@/assets/file.png\")\n              },\n              style: {\n                width: \"55px\",\n                height: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showFile(params.row);\n                }\n              }\n            });\n          }\n        }\n      }, {\n        title: \"文件类型\",\n        key: \"type\",\n        minWidth: 115,\n        sortable: true\n      }, {\n        title: \"文件大小\",\n        key: \"size\",\n        minWidth: 115,\n        sortable: true,\n        render: (h, params) => {\n          return h(\"div\", [h(\"Tag\", {\n            props: {\n              color: params.row.size > 1024 * 1024 * 5 ? \"orange\" : \"green\"\n            }\n          }, (params.row.size * 1.0 / (1024 * 1024)).toFixed(2) + \" MB\")]);\n        }\n      }, {\n        title: \"上传者\",\n        key: \"createBy\",\n        minWidth: 120,\n        sortable: true,\n        align: \"center\",\n        render: (h, params) => {\n          return h(\"Tooltip\", {\n            props: {\n              placement: \"top\",\n              content: params.row.createBy\n            }\n          }, [h(\"Tag\", {\n            style: {\n              \"margin-right\": \"8px\"\n            },\n            props: {\n              type: \"border\"\n            }\n          }, params.row.nickname)]);\n        }\n      }, {\n        title: \"上传时间\",\n        key: \"createTime\",\n        minWidth: 180,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        align: \"center\",\n        fixed: \"right\",\n        minWidth: 260,\n        render: (h, params) => {\n          var that = this;\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"success\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.download(params.row);\n              }\n            }\n          }, \"下载\"), h(\"Button\", {\n            props: {\n              type: \"warning\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.rename(params.row);\n              }\n            }\n          }, \"重命名\"), h(\"Button\", {\n            props: {\n              type: \"info\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.copy(params.row);\n              }\n            }\n          }, \"拷贝\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      total: 0\n    };\n  },\n  methods: {\n    init() {\n      var that = this;\n      this.getDataList();\n      this.getFileSettingFx();\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n    },\n    getFileSettingFx() {\n      var that = this;\n      getOneSetting({\n        id: \"FILE_PATH\"\n      }).then(res => {\n        if (res.success) {\n          that.filePath = res.result.value;\n        }\n      });\n      getOneSetting({\n        id: \"FILE_HTTP\"\n      }).then(res => {\n        if (res.success) {\n          that.fileHttp = res.result.value;\n        }\n      });\n      getOneSetting({\n        id: \"FILE_VIEW\"\n      }).then(res => {\n        if (res.success) {\n          that.fileView = res.result.value;\n        }\n      });\n    },\n    setFileSettingFx() {\n      var that = this;\n      setOneSetting({\n        id: \"FILE_PATH\",\n        value: that.filePath\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"存储路径更新成功\");\n        }\n      });\n      setOneSetting({\n        id: \"FILE_HTTP\",\n        value: that.fileHttp\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"HTTP更新成功\");\n        }\n      });\n      setOneSetting({\n        id: \"FILE_VIEW\",\n        value: that.fileView\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"预览接口更新成功\");\n        }\n      });\n    },\n    showPic(v) {\n      let image = new Image();\n      image.src = v.url;\n      let viewer = new Viewer(image, {\n        hidden: function () {\n          viewer.destroy();\n        }\n      });\n      viewer.show();\n    },\n    closeVideo() {\n      dp.destroy();\n    },\n    dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n      this.drop = !this.drop;\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList() {\n      this.loading = true;\n      getFileListData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      this.getDataList();\n    },\n    changeFileType() {\n      let name = this.fileType;\n      if (name == \"all\") {\n        this.searchForm.type = \"\";\n      } else if (name == \"pic\") {\n        this.searchForm.type = \"image\";\n      } else if (name == \"video\") {\n        this.searchForm.type = \"video\";\n      }\n      this.handleSearch();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.getDataList();\n    },\n    beforeUpload() {\n      return true;\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        this.$Message.success(\"上传文件 \" + file.name + \" 成功\");\n        this.getDataList();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    clearFiles() {\n      this.$refs.up.clearFiles();\n    },\n    download(v) {\n      window.open(v.url + \"?attname=&response-content-type=application/octet-stream&filename=\" + v.name);\n    },\n    showFile(v) {\n      window.open(v.url + \"?preview=true\");\n    },\n    copy(v) {\n      this.$Modal.confirm({\n        title: \"确认复制\",\n        content: \"您确认要复制文件 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          copyFile({\n            id: v.id,\n            key: v.fkey\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"复制文件成功，新文件名为 \" + v.name + \"_副本\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    removeAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 个文件?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteFile({\n            ids: ids\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"批量删除文件成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除文件 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteFile({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除文件 \" + v.name + \" 成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          let params = {\n            id: this.form.id,\n            newKey: this.form.fkey,\n            newName: this.form.name\n          };\n          renameFile(params).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n              this.changeFileNameModal = false;\n            }\n          });\n        }\n      });\n    },\n    rename(v) {\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.changeFileNameModal = true;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n      this.totalSize = \"\";\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n      let size = 0;\n      e.forEach(item => {\n        size += item.size * 1.0;\n      });\n      this.totalSize = (size * 1.0 / (1024 * 1024)).toFixed(2) + \" MB\";\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["getFileListData","copyFile","renameFile","deleteFile","getOneSetting","setOneSetting","Viewer","dp","name","data","filePath","fileHttp","fileView","fileSaveSettingModal","accessToken","loading","drop","dropDownContent","dropDownIcon","fileType","changeFileNameModal","uploadVisible","picVisible","picTitle","searchForm","fkey","type","pageNumber","pageSize","sort","order","startDate","endDate","selectDate","form","file","formValidate","required","message","trigger","submitLoading","selectList","selectCount","totalSize","columns","width","align","title","key","minWidth","sortable","render","h","params","row","includes","attrs","src","url","style","cursor","height","margin","on","click","showPic","require","showFile","$Message","warning","props","color","size","toFixed","placement","content","createBy","nickname","sortType","fixed","that","ghost","shape","marginRight","download","rename","copy","disabled","$route","meta","permTypes","remove","total","methods","init","getDataList","getFileSettingFx","getStore","id","then","res","success","result","value","setFileSettingFx","v","image","Image","viewer","hidden","destroy","show","closeVideo","dropDown","changePage","clearSelectAll","changePageSize","changeSort","e","selectDateRange","records","handleSearch","changeFileType","handleReset","$refs","resetFields","beforeUpload","handleMaxSize","$Notice","desc","handleSuccess","error","handleError","fileList","toString","clearFiles","up","window","open","$Modal","confirm","onOk","removeAll","ids","forEach","substring","length","handleSubmit","validate","valid","newKey","newName","attr","str","JSON","stringify","parse","table","selectAll","changeSelect","item","mounted"],"sources":["src/views/file/file/index.vue"],"sourcesContent":["<template>\r\n<div class=\"search\">\r\n    <Card>\r\n        <div class=\"operation\">\r\n            <Row>\r\n                <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"85\">\r\n                    <Form-item label=\"原文件名\" prop=\"name\">\r\n                        <Input type=\"text\" v-model=\"searchForm.name\" placeholder=\"请输入文件名\" clearable style=\"width: 160px\" />\r\n                    </Form-item>\r\n                    <Form-item label=\"上传者账号\" prop=\"createBy\">\r\n                        <Input type=\"text\" v-model=\"searchForm.createBy\" placeholder=\"请输入上传者登录账号\" clearable style=\"width: 160px\" />\r\n                    </Form-item>\r\n                    <Form-item label=\"存储文件名\" prop=\"name\">\r\n                        <Input type=\"text\" v-model=\"searchForm.fkey\" placeholder=\"请输入存储文件名\" clearable style=\"width: 160px\" />\r\n                    </Form-item>\r\n                    <Form-item label=\"上传时间\">\r\n                        <DatePicker v-model=\"selectDate\" type=\"daterange\" format=\"yyyy-MM-dd\" clearable @on-change=\"selectDateRange\" placeholder=\"选择起始时间\" style=\"width: 160px\"></DatePicker>\r\n                    </Form-item>\r\n                    <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n                        <Button @click=\"handleSearch\" ghost shape=\"circle\" type=\"primary\" icon=\"ios-search\" size=\"small\">搜索</Button>\r\n                        <Button @click=\"handleReset\" ghost shape=\"circle\" type=\"warning\" icon=\"md-refresh\" size=\"small\">重置</Button>\r\n                        <Button @click=\"uploadVisible=true\" ghost shape=\"circle\" type=\"success\" icon=\"md-cloud-upload\" size=\"small\" :disabled=\"!$route.meta.permTypes.includes('add')\">上传文件</Button>\r\n                        <Button @click=\"fileSaveSettingModal=true\" ghost shape=\"circle\" type=\"info\" icon=\"md-settings\" size=\"small\" :disabled=\"!$route.meta.permTypes.includes('enable')\">配置</Button>\r\n                    </Form-item>\r\n                </Form>\r\n            </Row>\r\n        </div>\r\n        <Row>\r\n            <Table :loading=\"loading\" border :columns=\"columns\" :data=\"data\" ref=\"table\" sortable=\"custom\" @on-sort-change=\"changeSort\" @on-selection-change=\"changeSelect\"></Table>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n            <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[15, 20, 40]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n        </Row>\r\n    </Card>\r\n\r\n    <Drawer title=\"文件上传\" closable v-model=\"uploadVisible\" width=\"500\">\r\n        <Upload action=\"/zwz/upload/file\" :headers=\"accessToken\" :on-success=\"handleSuccess\" :on-error=\"handleError\" :max-size=\"5120\" :on-exceeded-size=\"handleMaxSize\" :before-upload=\"beforeUpload\" multiple type=\"drag\" ref=\"up\">\r\n            <div style=\"padding: 20px 0\">\r\n                <Icon type=\"ios-cloud-upload\" size=\"52\" style=\"color: #3399ff\"></Icon>\r\n                <p>点击这里或将文件拖拽到这里上传</p>\r\n            </div>\r\n        </Upload>\r\n        <div class=\"drawer-footer\">\r\n            <Button @click=\"clearFiles\">清空上传列表</Button>\r\n        </div>\r\n    </Drawer>\r\n\r\n    <Modal title=\"文件重命名\" v-model=\"changeFileNameModal\" :mask-closable=\"false\" :width=\"500\" ok-text=\"保存\" @on-ok=\"handleSubmit\">\r\n        <Form ref=\"form\" :model=\"form\" :label-width=\"95\" :rules=\"formValidate\">\r\n            <Row :gutter=\"16\">\r\n                <Col span=\"24\">\r\n                <FormItem label=\"原文件名\" prop=\"name\">\r\n                    <Input v-model=\"form.name\" style=\"width:100%\" />\r\n                </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <Row :gutter=\"16\">\r\n                <Col span=\"24\">\r\n                <FormItem label=\"存储文件名\" prop=\"fkey\">\r\n                    <Input v-model=\"form.fkey\" style=\"width:100%\" />\r\n                </FormItem>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    </Modal>\r\n\r\n    <Modal title=\"文件存储配置\" v-model=\"fileSaveSettingModal\" :mask-closable=\"false\" :width=\"700\" ok-text=\"保存\" @on-ok=\"setFileSettingFx\">\r\n        <Form ref=\"settingForm\" :model=\"settingForm\" :label-width=\"95\">\r\n            <Row :gutter=\"16\">\r\n                <Col span=\"24\">\r\n                <FormItem label=\"存储路径\">\r\n                    <Input type=\"text\" v-model=\"filePath\" placeholder=\"如 C:\\\\oa-file\" style=\"width: 100%\" :disabled=\"changeLoading\" />\r\n                </FormItem>\r\n                </Col>\r\n            </Row>\r\n            <Row :gutter=\"16\">\r\n                <Col span=\"24\">\r\n                <FormItem label=\"预览接口\">\r\n                    <Input type=\"text\" v-model=\"fileView\" placeholder=\"如127.0.0.1:8080/zwz/file/view\" style=\"width: 100%\">\r\n                    <Select v-model=\"fileHttp\" slot=\"prepend\" style=\"width: 80px\" prop=\"http\" :disabled=\"changeLoading\">\r\n                        <Option value=\"http://\">http://</Option>\r\n                        <Option value=\"https://\">https://</Option>\r\n                    </Select>\r\n                    </Input>\r\n                </FormItem>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    </Modal>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    getFileListData,\r\n    copyFile,\r\n    renameFile,\r\n    deleteFile,\r\n    getOneSetting,\r\n    setOneSetting\r\n} from \"./api.js\";\r\nimport \"viewerjs/dist/viewer.css\";\r\nimport Viewer from \"viewerjs\";\r\nvar dp;\r\nexport default {\r\n    name: \"oss-manage\",\r\n    data() {\r\n        return {\r\n            filePath: \"\",\r\n            fileHttp: \"\",\r\n            fileView: \"\",\r\n            fileSaveSettingModal: false,\r\n            accessToken: {}, // 上传token鉴权\r\n            loading: false, // 表单加载状态\r\n            drop: false,\r\n            dropDownContent: \"展开\",\r\n            dropDownIcon: \"ios-arrow-down\",\r\n            fileType: \"all\",\r\n            changeFileNameModal: false, // 添加或编辑显示\r\n            uploadVisible: false,\r\n            picVisible: false,\r\n            picTitle: \"\",\r\n            searchForm: {\r\n                // 搜索框对应data对象\r\n                name: \"\",\r\n                fkey: \"\",\r\n                type: \"\",\r\n                pageNumber: 1, // 当前页数\r\n                pageSize: 15, // 页面大小\r\n                sort: \"createTime\", // 默认排序字段\r\n                order: \"desc\", // 默认排序方式\r\n                startDate: \"\", // 起始时间\r\n                endDate: \"\" // 终止时间\r\n            },\r\n            selectDate: null, // 选择日期绑定modal\r\n            form: {\r\n                name: \"\",\r\n                fkey: \"\"\r\n            },\r\n            file: {},\r\n            // 表单验证规则\r\n            formValidate: {\r\n                name: [{\r\n                    required: true,\r\n                    message: \"不能为空\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                fkey: [{\r\n                    required: true,\r\n                    message: \"不能为空\",\r\n                    trigger: \"blur\"\r\n                }]\r\n            },\r\n            submitLoading: false,\r\n            selectList: [],\r\n            selectCount: 0,\r\n            totalSize: \"\",\r\n            columns: [{\r\n                    type: \"selection\",\r\n                    width: 60,\r\n                    align: \"center\"\r\n                },\r\n                {\r\n                    type: \"index\",\r\n                    width: 60,\r\n                    align: \"center\"\r\n                },\r\n                {\r\n                    title: \"原文件名\",\r\n                    key: \"name\",\r\n                    minWidth: 130,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    title: \"存储文件名\",\r\n                    key: \"fkey\",\r\n                    minWidth: 165,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    title: \"预览\",\r\n                    key: \"url\",\r\n                    minWidth: 150,\r\n                    align: \"center\",\r\n                    render: (h, params) => {\r\n                        if (params.row.type.includes(\"image\") > 0) {\r\n                            return h(\"img\", {\r\n                                attrs: {\r\n                                    src: params.row.url\r\n                                },\r\n                                style: {\r\n                                    cursor: \"zoom-in\",\r\n                                    width: \"80px\",\r\n                                    height: \"60px\",\r\n                                    margin: \"10px 0\",\r\n                                    \"object-fit\": \"contain\"\r\n                                },\r\n                                on: {\r\n                                    click: () => {\r\n                                        this.showPic(params.row);\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else if (params.row.type.includes(\"pdf\") > 0) {\r\n                            return h(\"img\", {\r\n                                attrs: {\r\n                                    src: require(\"@/assets/pdf.png\")\r\n                                },\r\n                                style: {\r\n                                    cursor: \"zoom-in\",\r\n                                    width: \"60px\",\r\n                                    margin: \"10px 0\",\r\n                                    \"object-fit\": \"contain\"\r\n                                },\r\n                                on: {\r\n                                    click: () => {\r\n                                        this.showFile(params.row);\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else if (\r\n                            params.row.type.includes(\"zip\") > 0 ||\r\n                            params.row.type.includes(\"rar\") > 0 ||\r\n                            params.row.type.includes(\"7z\") > 0\r\n                        ) {\r\n                            return h(\"img\", {\r\n                                attrs: {\r\n                                    src: require(\"@/assets/zip.png\")\r\n                                },\r\n                                style: {\r\n                                    width: \"60px\",\r\n                                    margin: \"10px 0\",\r\n                                    \"object-fit\": \"contain\"\r\n                                },\r\n                                on: {\r\n                                    click: () => {\r\n                                        this.showFile(params.row);\r\n                                        this.$Message.warning(\"请下载后解压访问!\");\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else {\r\n                            return h(\"img\", {\r\n                                attrs: {\r\n                                    src: require(\"@/assets/file.png\")\r\n                                },\r\n                                style: {\r\n                                    width: \"55px\",\r\n                                    height: \"60px\",\r\n                                    margin: \"10px 0\",\r\n                                    \"object-fit\": \"contain\"\r\n                                },\r\n                                on: {\r\n                                    click: () => {\r\n                                        this.showFile(params.row);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    title: \"文件类型\",\r\n                    key: \"type\",\r\n                    minWidth: 115,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    title: \"文件大小\",\r\n                    key: \"size\",\r\n                    minWidth: 115,\r\n                    sortable: true,\r\n                    render: (h, params) => {\r\n                        return h(\"div\", [\r\n                            h(\r\n                                \"Tag\", {\r\n                                    props: {\r\n                                        color: (params.row.size > 1024 * 1024 * 5) ? \"orange\" : \"green\"\r\n                                    }\r\n                                },\r\n                                ((params.row.size * 1.0) / (1024 * 1024)).toFixed(2) + \" MB\"\r\n                            )\r\n                        ]);\r\n                    }\r\n                },\r\n                {\r\n                    title: \"上传者\",\r\n                    key: \"createBy\",\r\n                    minWidth: 120,\r\n                    sortable: true,\r\n                    align: \"center\",\r\n                    render: (h, params) => {\r\n                        return h(\r\n                            \"Tooltip\", {\r\n                                props: {\r\n                                    placement: \"top\",\r\n                                    content: params.row.createBy\r\n                                }\r\n                            },\r\n                            [\r\n                                h(\r\n                                    \"Tag\", {\r\n                                        style: {\r\n                                            \"margin-right\": \"8px\"\r\n                                        },\r\n                                        props: {\r\n                                            type: \"border\"\r\n                                        }\r\n                                    },\r\n                                    params.row.nickname\r\n                                )\r\n                            ]\r\n                        );\r\n                    }\r\n                },\r\n                {\r\n                    title: \"上传时间\",\r\n                    key: \"createTime\",\r\n                    minWidth: 180,\r\n                    sortable: true,\r\n                    sortType: \"desc\"\r\n                },\r\n                {\r\n                    title: \"操作\",\r\n                    key: \"action\",\r\n                    align: \"center\",\r\n                    fixed: \"right\",\r\n                    minWidth: 260,\r\n                    render: (h, params) => {\r\n                        var that = this;\r\n                        return h(\"div\", [\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: \"success\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\"\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: \"5px\"\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.download(params.row);\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"下载\"\r\n                            ),\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: \"warning\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\"\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: \"5px\"\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.rename(params.row);\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"重命名\"\r\n                            ),\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: \"info\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\"\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: \"5px\"\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.copy(params.row);\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"拷贝\"\r\n                            ),\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: \"error\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\",\r\n                                        disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: \"5px\"\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.remove(params.row);\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"删除\"\r\n                            )\r\n                        ]);\r\n                    }\r\n                }\r\n            ],\r\n            data: [],\r\n            total: 0,\r\n        };\r\n    },\r\n    methods: {\r\n        init() {\r\n            var that = this;\r\n            this.getDataList();\r\n            this.getFileSettingFx();\r\n            this.accessToken = {\r\n                accessToken: this.getStore(\"accessToken\")\r\n            };\r\n        },\r\n        getFileSettingFx() {\r\n            var that = this;\r\n            getOneSetting({\r\n                id: \"FILE_PATH\"\r\n            }).then(res => {\r\n                if (res.success) {\r\n                    that.filePath = res.result.value\r\n                }\r\n            });\r\n            getOneSetting({\r\n                id: \"FILE_HTTP\"\r\n            }).then(res => {\r\n                if (res.success) {\r\n                    that.fileHttp = res.result.value\r\n                }\r\n            });\r\n            getOneSetting({\r\n                id: \"FILE_VIEW\"\r\n            }).then(res => {\r\n                if (res.success) {\r\n                    that.fileView = res.result.value\r\n                }\r\n            });\r\n        },\r\n        setFileSettingFx() {\r\n            var that = this;\r\n            setOneSetting({\r\n                id: \"FILE_PATH\",\r\n                value: that.filePath\r\n            }).then(res => {\r\n                if (res.success) {\r\n                    this.$Message.success(\"存储路径更新成功\");\r\n                }\r\n            });\r\n            setOneSetting({\r\n                id: \"FILE_HTTP\",\r\n                value: that.fileHttp\r\n            }).then(res => {\r\n                if (res.success) {\r\n                    this.$Message.success(\"HTTP更新成功\");\r\n                }\r\n            });\r\n            setOneSetting({\r\n                id: \"FILE_VIEW\",\r\n                value: that.fileView\r\n            }).then(res => {\r\n                if (res.success) {\r\n                    this.$Message.success(\"预览接口更新成功\");\r\n                }\r\n            });\r\n        },\r\n        showPic(v) {\r\n            let image = new Image();\r\n            image.src = v.url;\r\n            let viewer = new Viewer(image, {\r\n                hidden: function () {\r\n                    viewer.destroy();\r\n                }\r\n            });\r\n            viewer.show();\r\n        },\r\n        closeVideo() {\r\n            dp.destroy();\r\n        },\r\n        dropDown() {\r\n            if (this.drop) {\r\n                this.dropDownContent = \"展开\";\r\n                this.dropDownIcon = \"ios-arrow-down\";\r\n            } else {\r\n                this.dropDownContent = \"收起\";\r\n                this.dropDownIcon = \"ios-arrow-up\";\r\n            }\r\n            this.drop = !this.drop;\r\n        },\r\n        changePage(v) {\r\n            this.searchForm.pageNumber = v;\r\n            this.getDataList();\r\n            this.clearSelectAll();\r\n        },\r\n        changePageSize(v) {\r\n            this.searchForm.pageSize = v;\r\n            this.getDataList();\r\n        },\r\n        changeSort(e) {\r\n            this.searchForm.sort = e.key;\r\n            this.searchForm.order = e.order;\r\n            if (e.order == \"normal\") {\r\n                this.searchForm.order = \"\";\r\n            }\r\n            this.getDataList();\r\n        },\r\n        selectDateRange(v) {\r\n            if (v) {\r\n                this.searchForm.startDate = v[0];\r\n                this.searchForm.endDate = v[1];\r\n            }\r\n        },\r\n        getDataList() {\r\n            this.loading = true;\r\n            getFileListData(this.searchForm).then(res => {\r\n                this.loading = false;\r\n                if (res.success) {\r\n                    this.data = res.result.records;\r\n                    this.total = res.result.total;\r\n                }\r\n            });\r\n        },\r\n        handleSearch() {\r\n            this.searchForm.pageNumber = 1;\r\n            this.searchForm.pageSize = 15;\r\n            this.getDataList();\r\n        },\r\n        changeFileType() {\r\n            let name = this.fileType;\r\n            if (name == \"all\") {\r\n                this.searchForm.type = \"\";\r\n            } else if (name == \"pic\") {\r\n                this.searchForm.type = \"image\";\r\n            } else if (name == \"video\") {\r\n                this.searchForm.type = \"video\";\r\n            }\r\n            this.handleSearch();\r\n        },\r\n        handleReset() {\r\n            this.$refs.searchForm.resetFields();\r\n            this.searchForm.pageNumber = 1;\r\n            this.searchForm.pageSize = 15;\r\n            this.selectDate = null;\r\n            this.searchForm.startDate = \"\";\r\n            this.searchForm.endDate = \"\";\r\n            this.getDataList();\r\n        },\r\n        beforeUpload() {\r\n            return true;\r\n        },\r\n        handleMaxSize(file) {\r\n            this.$Notice.warning({\r\n                title: \"文件大小过大\",\r\n                desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\r\n            });\r\n        },\r\n        handleSuccess(res, file) {\r\n            if (res.success) {\r\n                this.$Message.success(\"上传文件 \" + file.name + \" 成功\");\r\n                this.getDataList();\r\n            } else {\r\n                this.$Message.error(res.message);\r\n            }\r\n        },\r\n        handleError(error, file, fileList) {\r\n            this.$Message.error(error.toString());\r\n        },\r\n        clearFiles() {\r\n            this.$refs.up.clearFiles();\r\n        },\r\n        download(v) {\r\n            window.open(\r\n                v.url +\r\n                \"?attname=&response-content-type=application/octet-stream&filename=\" +\r\n                v.name\r\n            );\r\n        },\r\n        showFile(v) {\r\n            window.open(v.url + \"?preview=true\");\r\n        },\r\n        copy(v) {\r\n            this.$Modal.confirm({\r\n                title: \"确认复制\",\r\n                content: \"您确认要复制文件 \" + v.name + \" ?\",\r\n                loading: true,\r\n                onOk: () => {\r\n                    copyFile({\r\n                        id: v.id,\r\n                        key: v.fkey\r\n                    }).then(res => {\r\n                        this.$Modal.remove();\r\n                        if (res.success) {\r\n                            this.$Message.success(\r\n                                \"复制文件成功，新文件名为 \" + v.name + \"_副本\"\r\n                            );\r\n                            this.getDataList();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        removeAll() {\r\n            if (this.selectCount <= 0) {\r\n                this.$Message.warning(\"您还未选择要删除的数据\");\r\n                return;\r\n            }\r\n            this.$Modal.confirm({\r\n                title: \"确认删除\",\r\n                content: \"您确认要删除所选的 \" + this.selectCount + \" 个文件?\",\r\n                loading: true,\r\n                onOk: () => {\r\n                    let ids = \"\";\r\n                    this.selectList.forEach(function (e) {\r\n                        ids += e.id + \",\";\r\n                    });\r\n                    ids = ids.substring(0, ids.length - 1);\r\n                    deleteFile({\r\n                        ids: ids\r\n                    }).then(res => {\r\n                        this.$Modal.remove();\r\n                        if (res.success) {\r\n                            this.$Message.success(\"批量删除文件成功\");\r\n                            this.clearSelectAll();\r\n                            this.getDataList();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        remove(v) {\r\n            this.$Modal.confirm({\r\n                title: \"确认删除\",\r\n                content: \"您确认要删除文件 \" + v.name + \" ?\",\r\n                loading: true,\r\n                onOk: () => {\r\n                    deleteFile({\r\n                        ids: v.id\r\n                    }).then(res => {\r\n                        this.$Modal.remove();\r\n                        if (res.success) {\r\n                            this.$Message.success(\"删除文件 \" + v.name + \" 成功\");\r\n                            this.getDataList();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        handleSubmit() {\r\n            this.$refs.form.validate(valid => {\r\n                if (valid) {\r\n                    this.submitLoading = true;\r\n                    let params = {\r\n                        id: this.form.id,\r\n                        newKey: this.form.fkey,\r\n                        newName: this.form.name\r\n                    };\r\n                    renameFile(params).then(res => {\r\n                        this.submitLoading = false;\r\n                        if (res.success) {\r\n                            this.$Message.success(\"操作成功\");\r\n                            this.getDataList();\r\n                            this.changeFileNameModal = false;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        rename(v) {\r\n            for (let attr in v) {\r\n                if (v[attr] == null) {\r\n                    v[attr] = \"\";\r\n                }\r\n            }\r\n            let str = JSON.stringify(v);\r\n            let data = JSON.parse(str);\r\n            this.form = data;\r\n            this.changeFileNameModal = true;\r\n        },\r\n        clearSelectAll() {\r\n            this.$refs.table.selectAll(false);\r\n            this.totalSize = \"\";\r\n        },\r\n        changeSelect(e) {\r\n            this.selectList = e;\r\n            this.selectCount = e.length;\r\n            let size = 0;\r\n            e.forEach(item => {\r\n                size += item.size * 1.0;\r\n            });\r\n            this.totalSize = ((size * 1.0) / (1024 * 1024)).toFixed(2) + \" MB\";\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"../../../styles/table-common.less\";\r\n\r\n.search {\r\n    .oss-operation {\r\n        margin-bottom: 2vh;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n.oss-wrapper {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n}\r\n\r\n.oss-card {\r\n    margin: 10px 2.5% 10px 0;\r\n    width: 22.5%;\r\n\r\n    :hover {\r\n        .content .other .name {\r\n            color: #1890ff;\r\n            transition: color .3s;\r\n        }\r\n    }\r\n\r\n    cursor: pointer;\r\n\r\n    .ivu-card-body {\r\n        padding: 0;\r\n    }\r\n\r\n    .content {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        :hover {\r\n            .play {\r\n                transition: opacity .3s;\r\n                opacity: 1 !important;\r\n            }\r\n        }\r\n\r\n        .img {\r\n            height: 135px;\r\n            object-fit: cover;\r\n        }\r\n\r\n        .video {\r\n            height: 135px;\r\n            position: relative;\r\n\r\n            .cover {\r\n                height: 100%;\r\n                width: 100%;\r\n                object-fit: fill;\r\n            }\r\n\r\n            .play {\r\n                position: absolute;\r\n                top: 43px;\r\n                left: 117px;\r\n                height: 50px;\r\n                width: 50px;\r\n                opacity: 0.8;\r\n            }\r\n        }\r\n\r\n        .other {\r\n            padding: 16px;\r\n            height: 135px;\r\n\r\n            .name {\r\n                font-size: 16px;\r\n                text-overflow: ellipsis;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n                color: rgba(0, 0, 0, .85);\r\n                font-weight: 500;\r\n                margin-bottom: 4px;\r\n            }\r\n\r\n            .key {\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                height: 45px;\r\n                word-break: break-all;\r\n                color: rgba(0, 0, 0, .45);\r\n            }\r\n\r\n            .info {\r\n                font-size: 12px;\r\n                color: rgba(0, 0, 0, .45);\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                height: 36px;\r\n                word-break: break-all;\r\n            }\r\n        }\r\n\r\n        .actions {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 50px;\r\n            background: #f7f9fa;\r\n            border-top: 1px solid #e8e8e8;\r\n\r\n            i:hover {\r\n                color: #1890ff;\r\n            }\r\n\r\n            .btn {\r\n                display: flex;\r\n                justify-content: center;\r\n                width: 25%;\r\n                border-right: 1px solid #e8e8e8;\r\n            }\r\n\r\n            .btn-no {\r\n                display: flex;\r\n                justify-content: center;\r\n                width: 25%;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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AAAC,OAAA,WACA,EACA;QACA;MACA,GACA;QACA1B,KAAA;QACAC,GAAA;QACAC,QAAA;QACAC,QAAA;QACAJ,KAAA;QACAK,MAAA,EAAAA,CAAAC,CAAA,EAAAC,MAAA;UACA,OAAAD,CAAA,CACA;YACAkB,KAAA;cACAI,SAAA;cACAC,OAAA,EAAAtB,MAAA,CAAAC,GAAA,CAAAsB;YACA;UACA,GACA,CACAxB,CAAA,CACA;YACAO,KAAA;cACA;YACA;YACAW,KAAA;cACA5C,IAAA;YACA;UACA,GACA2B,MAAA,CAAAC,GAAA,CAAAuB,QACA,EAEA;QACA;MACA,GACA;QACA9B,KAAA;QACAC,GAAA;QACAC,QAAA;QACAC,QAAA;QACA4B,QAAA;MACA,GACA;QACA/B,KAAA;QACAC,GAAA;QACAF,KAAA;QACAiC,KAAA;QACA9B,QAAA;QACAE,MAAA,EAAAA,CAAAC,CAAA,EAAAC,MAAA;UACA,IAAA2B,IAAA;UACA,OAAA5B,CAAA,SACAA,CAAA,CACA;YACAkB,KAAA;cACA5C,IAAA;cACA8C,IAAA;cACAS,KAAA;cACAC,KAAA;YACA;YACAvB,KAAA;cACAwB,WAAA;YACA;YACApB,EAAA;cACAC,KAAA,EAAAA,CAAA;gBACA,KAAAoB,QAAA,CAAA/B,MAAA,CAAAC,GAAA;cACA;YACA;UACA,GACA,IACA,GACAF,CAAA,CACA;YACAkB,KAAA;cACA5C,IAAA;cACA8C,IAAA;cACAS,KAAA;cACAC,KAAA;YACA;YACAvB,KAAA;cACAwB,WAAA;YACA;YACApB,EAAA;cACAC,KAAA,EAAAA,CAAA;gBACA,KAAAqB,MAAA,CAAAhC,MAAA,CAAAC,GAAA;cACA;YACA;UACA,GACA,KACA,GACAF,CAAA,CACA;YACAkB,KAAA;cACA5C,IAAA;cACA8C,IAAA;cACAS,KAAA;cACAC,KAAA;YACA;YACAvB,KAAA;cACAwB,WAAA;YACA;YACApB,EAAA;cACAC,KAAA,EAAAA,CAAA;gBACA,KAAAsB,IAAA,CAAAjC,MAAA,CAAAC,GAAA;cACA;YACA;UACA,GACA,IACA,GACAF,CAAA,CACA;YACAkB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"},"metadata":{},"sourceType":"module","externalDependencies":[]}