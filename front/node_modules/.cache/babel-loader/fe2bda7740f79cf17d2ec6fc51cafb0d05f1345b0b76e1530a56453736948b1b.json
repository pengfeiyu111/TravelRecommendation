{"ast":null,"code":"import { uploadFile } from \"@/api/index\";\nexport default {\n  name: \"fileUpload\",\n  props: {\n    value: Object,\n    size: String,\n    type: String,\n    ghost: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    shape: String,\n    icon: {\n      type: String,\n      default: \"ios-cloud-upload-outline\"\n    },\n    text: {\n      type: String,\n      default: \"上传文件\"\n    },\n    maxSize: {\n      type: Number,\n      default: 5\n    },\n    accept: String\n  },\n  computed: {\n    format() {\n      if (this.accept) {\n        let format = [];\n        this.accept.split(\",\").forEach(e => {\n          format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\n        });\n        return format;\n      } else {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      accessToken: {},\n      title: \"点击下载\",\n      currentValue: this.value,\n      loading: false,\n      uploadFileUrl: uploadFile\n    };\n  },\n  methods: {\n    init() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n    },\n    download() {\n      if (!this.currentValue.url) {\n        this.$Message.error(\"无效的链接\");\n        return;\n      }\n      window.open(this.currentValue.url + \"?attname=&response-content-type=application/octet-stream&filename=\" + this.currentValue.name);\n    },\n    handleFormatError(file) {\n      this.loading = false;\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc: \"所选文件‘ \" + file.name + \" ’格式不正确, 请选择 \" + this.accept + \" 格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.loading = false;\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 \" + this.maxSize + \"M.\"\n      });\n    },\n    beforeUpload() {\n      this.loading = true;\n      return true;\n    },\n    handleSuccess(res, file) {\n      this.loading = false;\n      if (res.success) {\n        this.currentValue = {\n          url: res.result,\n          name: file.name,\n          size: file.size\n        };\n        this.title = \"点击下载(\" + (file.size * 1.0 / (1024 * 1024)).toFixed(2) + \" MB)\";\n        this.$emit(\"input\", this.currentValue);\n        this.$emit(\"on-change\", this.currentValue);\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.loading = false;\n      this.$Message.error(error.toString());\n    },\n    handleChange(v) {\n      this.$emit(\"input\", this.currentValue);\n      this.$emit(\"on-change\", this.currentValue);\n    },\n    setCurrentValue(value) {\n      if (value === this.currentValue) {\n        return;\n      }\n      this.currentValue = value;\n      if (this.currentValue.size) {\n        this.title = \"点击下载(\" + (this.currentValue.size * 1.0 / (1024 * 1024)).toFixed(2) + \" MB)\";\n      } else {\n        this.title = \"点击下载\";\n      }\n      this.$emit(\"on-change\", this.currentValue);\n    }\n  },\n  watch: {\n    value(val) {\n      this.setCurrentValue(val);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["uploadFile","name","props","value","Object","size","String","type","ghost","Boolean","default","disabled","shape","icon","text","maxSize","Number","accept","computed","format","split","forEach","e","push","replace","data","accessToken","title","currentValue","loading","uploadFileUrl","methods","init","getStore","download","url","$Message","error","window","open","handleFormatError","file","$Notice","warning","desc","handleMaxSize","beforeUpload","handleSuccess","res","success","result","toFixed","$emit","message","handleError","fileList","toString","handleChange","v","setCurrentValue","watch","val","mounted"],"sources":["src/views/template/file-upload.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <div class=\"file-upload-wrap\">\r\n        <Upload :action=\"uploadFileUrl\" :headers=\"accessToken\" :on-success=\"handleSuccess\" :on-error=\"handleError\" :format=\"format\" :accept=\"accept\" :max-size=\"maxSize*1024\" :on-format-error=\"handleFormatError\" :on-exceeded-size=\"handleMaxSize\" :before-upload=\"beforeUpload\" :show-upload-list=\"false\" class=\"file-upload\">\r\n            <Button :loading=\"loading\" :type=\"type\" :ghost=\"ghost\" :shape=\"shape\" :size=\"size\" :disabled=\"disabled\" :icon=\"icon\">{{text}}</Button>\r\n        </Upload>\r\n        <Tooltip transfer :content=\"title\" placement=\"top\">\r\n            <a @click=\"download\">{{currentValue.name}}</a>\r\n        </Tooltip>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    uploadFile\r\n} from \"@/api/index\";\r\nexport default {\r\n    name: \"fileUpload\",\r\n    props: {\r\n        value: Object,\r\n        size: String,\r\n        type: String,\r\n        ghost: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        shape: String,\r\n        icon: {\r\n            type: String,\r\n            default: \"ios-cloud-upload-outline\"\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: \"上传文件\"\r\n        },\r\n        maxSize: {\r\n            type: Number,\r\n            default: 5\r\n        },\r\n        accept: String\r\n    },\r\n    computed: {\r\n        format() {\r\n            if (this.accept) {\r\n                let format = [];\r\n                this.accept.split(\",\").forEach(e => {\r\n                    format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\r\n                });\r\n                return format;\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            accessToken: {},\r\n            title: \"点击下载\",\r\n            currentValue: this.value,\r\n            loading: false,\r\n            uploadFileUrl: uploadFile\r\n        };\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.accessToken = {\r\n                accessToken: this.getStore(\"accessToken\")\r\n            };\r\n        },\r\n        download() {\r\n            if (!this.currentValue.url) {\r\n                this.$Message.error(\"无效的链接\");\r\n                return;\r\n            }\r\n            window.open(\r\n                this.currentValue.url +\r\n                \"?attname=&response-content-type=application/octet-stream&filename=\" +\r\n                this.currentValue.name\r\n            );\r\n        },\r\n        handleFormatError(file) {\r\n            this.loading = false;\r\n            this.$Notice.warning({\r\n                title: \"不支持的文件格式\",\r\n                desc: \"所选文件‘ \" +\r\n                    file.name +\r\n                    \" ’格式不正确, 请选择 \" +\r\n                    this.accept +\r\n                    \" 格式文件\"\r\n            });\r\n        },\r\n        handleMaxSize(file) {\r\n            this.loading = false;\r\n            this.$Notice.warning({\r\n                title: \"文件大小过大\",\r\n                desc: \"所选文件‘ \" +\r\n                    file.name +\r\n                    \" ’大小过大, 不得超过 \" +\r\n                    this.maxSize +\r\n                    \"M.\"\r\n            });\r\n        },\r\n        beforeUpload() {\r\n            this.loading = true;\r\n            return true;\r\n        },\r\n        handleSuccess(res, file) {\r\n            this.loading = false;\r\n            if (res.success) {\r\n                this.currentValue = {\r\n                    url: res.result,\r\n                    name: file.name,\r\n                    size: file.size\r\n                };\r\n                this.title =\r\n                    \"点击下载(\" +\r\n                    ((file.size * 1.0) / (1024 * 1024)).toFixed(2) +\r\n                    \" MB)\";\r\n                this.$emit(\"input\", this.currentValue);\r\n                this.$emit(\"on-change\", this.currentValue);\r\n            } else {\r\n                this.$Message.error(res.message);\r\n            }\r\n        },\r\n        handleError(error, file, fileList) {\r\n            this.loading = false;\r\n            this.$Message.error(error.toString());\r\n        },\r\n        handleChange(v) {\r\n            this.$emit(\"input\", this.currentValue);\r\n            this.$emit(\"on-change\", this.currentValue);\r\n        },\r\n        setCurrentValue(value) {\r\n            if (value === this.currentValue) {\r\n                return;\r\n            }\r\n            this.currentValue = value;\r\n            if (this.currentValue.size) {\r\n                this.title =\r\n                    \"点击下载(\" +\r\n                    ((this.currentValue.size * 1.0) / (1024 * 1024)).toFixed(2) +\r\n                    \" MB)\";\r\n            } else {\r\n                this.title = \"点击下载\";\r\n            }\r\n            this.$emit(\"on-change\", this.currentValue);\r\n        }\r\n    },\r\n    watch: {\r\n        value(val) {\r\n            this.setCurrentValue(val);\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.file-upload-wrap {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .file-upload {\r\n        display: inline-block;\r\n        margin-right: 10px;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}