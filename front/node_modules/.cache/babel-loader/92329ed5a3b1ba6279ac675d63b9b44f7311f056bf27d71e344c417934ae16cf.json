{"ast":null,"code":"import \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nimport { uploadFile } from \"@/api/index\";\nexport default {\n  name: \"uploadPicInput\",\n  props: {\n    value: String,\n    size: String,\n    placeholder: {\n      type: String,\n      default: \"可输入文件链接\"\n    },\n    buttonTitle: {\n      type: String,\n      default: \"上传文件\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    maxlength: Number,\n    icon: {\n      type: String,\n      default: \"ios-cloud-upload-outline\"\n    },\n    maxSize: {\n      type: Number,\n      default: 100\n    },\n    accept: {\n      type: String,\n      default: \".pdf\"\n    }\n  },\n  computed: {\n    format() {\n      if (this.accept) {\n        let format = [];\n        this.accept.split(\",\").forEach(e => {\n          format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\n        });\n        return format;\n      } else {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      accessToken: {},\n      currentValue: this.value,\n      loading: false,\n      uploadFileUrl: uploadFile\n    };\n  },\n  methods: {\n    init() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n    },\n    handleFormatError(file) {\n      this.loading = false;\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc: \"所选文件‘ \" + file.name + \" ’格式不正确, 请选择 \" + this.accept + \" 格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.loading = false;\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 \" + this.maxSize + \"M.\"\n      });\n    },\n    beforeUpload() {\n      this.loading = true;\n      return true;\n    },\n    handleSuccess(res, file) {\n      this.loading = false;\n      if (res.success) {\n        this.currentValue = res.result;\n        this.$emit(\"input\", this.currentValue);\n        this.$emit(\"on-change\", this.currentValue);\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.loading = false;\n      this.$Message.error(error.toString());\n    },\n    handleChange(v) {\n      this.$emit(\"input\", this.currentValue);\n      this.$emit(\"on-change\", this.currentValue);\n    },\n    setCurrentValue(value) {\n      if (value === this.currentValue) {\n        return;\n      }\n      this.currentValue = value;\n      this.$emit(\"on-change\", this.currentValue);\n    }\n  },\n  watch: {\n    value(val) {\n      this.setCurrentValue(val);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["Viewer","uploadFile","name","props","value","String","size","placeholder","type","default","buttonTitle","disabled","Boolean","readonly","maxlength","Number","icon","maxSize","accept","computed","format","split","forEach","e","push","replace","data","accessToken","currentValue","loading","uploadFileUrl","methods","init","getStore","handleFormatError","file","$Notice","warning","title","desc","handleMaxSize","beforeUpload","handleSuccess","res","success","result","$emit","$Message","error","message","handleError","fileList","toString","handleChange","v","setCurrentValue","watch","val","mounted"],"sources":["src/views/template/upload-file-input.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"display:flex;\">\r\n      <Input\r\n        v-model=\"currentValue\"\r\n        @on-change=\"handleChange\"\r\n        :placeholder=\"placeholder\"\r\n        :size=\"size\"\r\n        :disabled=\"disabled\"\r\n        :readonly=\"readonly\"\r\n        :maxlength=\"maxlength\"\r\n        style=\"margin-right:10px;\"\r\n      >\r\n      </Input>\r\n      <Upload\r\n        :action=\"uploadFileUrl\"\r\n        :headers=\"accessToken\"\r\n        :on-success=\"handleSuccess\"\r\n        :on-error=\"handleError\"\r\n        :format=\"format\"\r\n        :accept=\"accept\"\r\n        :max-size=\"maxSize*1024\"\r\n        :on-format-error=\"handleFormatError\"\r\n        :on-exceeded-size=\"handleMaxSize\"\r\n        :before-upload=\"beforeUpload\"\r\n        :show-upload-list=\"false\"\r\n      >\r\n        <Button type=\"warning\" ghost :loading=\"loading\" :size=\"size\" :disabled=\"disabled\" :icon=\"icon\">{{buttonTitle}}</Button>\r\n      </Upload>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"viewerjs/dist/viewer.css\";\r\nimport Viewer from \"viewerjs\";\r\nimport { uploadFile } from \"@/api/index\";\r\nexport default {\r\n  name: \"uploadPicInput\",\r\n  props: {\r\n    value: String,\r\n    size: String,\r\n    placeholder: {\r\n      type: String,\r\n      default: \"可输入文件链接\"\r\n    },\r\n    buttonTitle: {\r\n      type: String,\r\n      default: \"上传文件\"\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    readonly: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    maxlength: Number,\r\n    icon: {\r\n      type: String,\r\n      default: \"ios-cloud-upload-outline\"\r\n    },\r\n    maxSize: {\r\n      type: Number,\r\n      default: 100\r\n    },\r\n    accept: {\r\n      type: String,\r\n      default: \".pdf\"\r\n    }\r\n  },\r\n  computed: {\r\n    format() {\r\n      if (this.accept) {\r\n        let format = [];\r\n        this.accept.split(\",\").forEach(e => {\r\n          format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\r\n        });\r\n        return format;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      accessToken: {},\r\n      currentValue: this.value,\r\n      loading: false,\r\n      uploadFileUrl: uploadFile\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\")\r\n      };\r\n    },\r\n    handleFormatError(file) {\r\n      this.loading = false;\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 \"+this.accept+\" 格式文件\"\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.loading = false;\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’大小过大, 不得超过 \" +\r\n          this.maxSize +\r\n          \"M.\"\r\n      });\r\n    },\r\n    beforeUpload() {\r\n      this.loading = true;\r\n      return true;\r\n    },\r\n    handleSuccess(res, file) {\r\n      this.loading = false;\r\n      if (res.success) {\r\n        this.currentValue = res.result;\r\n        this.$emit(\"input\", this.currentValue);\r\n        this.$emit(\"on-change\", this.currentValue);\r\n      } else {\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.loading = false;\r\n      this.$Message.error(error.toString());\r\n    },\r\n    handleChange(v) {\r\n      this.$emit(\"input\", this.currentValue);\r\n      this.$emit(\"on-change\", this.currentValue);\r\n    },\r\n    setCurrentValue(value) {\r\n      if (value === this.currentValue) {\r\n        return;\r\n      }\r\n      this.currentValue = value;\r\n      this.$emit(\"on-change\", this.currentValue);\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.setCurrentValue(val);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>\r\n\r\n"],"mappings":"AAkCA;AACA,OAAAA,MAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA,EAAAC,MAAA;IACAC,IAAA,EAAAD,MAAA;IACAE,WAAA;MACAC,IAAA,EAAAH,MAAA;MACAI,OAAA;IACA;IACAC,WAAA;MACAF,IAAA,EAAAH,MAAA;MACAI,OAAA;IACA;IACAE,QAAA;MACAH,IAAA,EAAAI,OAAA;MACAH,OAAA;IACA;IACAI,QAAA;MACAL,IAAA,EAAAI,OAAA;MACAH,OAAA;IACA;IACAK,SAAA,EAAAC,MAAA;IACAC,IAAA;MACAR,IAAA,EAAAH,MAAA;MACAI,OAAA;IACA;IACAQ,OAAA;MACAT,IAAA,EAAAO,MAAA;MACAN,OAAA;IACA;IACAS,MAAA;MACAV,IAAA,EAAAH,MAAA;MACAI,OAAA;IACA;EACA;EACAU,QAAA;IACAC,OAAA;MACA,SAAAF,MAAA;QACA,IAAAE,MAAA;QACA,KAAAF,MAAA,CAAAG,KAAA,MAAAC,OAAA,CAAAC,CAAA;UACAH,MAAA,CAAAI,IAAA,CAAAD,CAAA,CAAAE,OAAA,UAAAA,OAAA;QACA;QACA,OAAAL,MAAA;MACA;QACA;MACA;IACA;EACA;EACAM,KAAA;IACA;MACAC,WAAA;MACAC,YAAA,OAAAxB,KAAA;MACAyB,OAAA;MACAC,aAAA,EAAA7B;IACA;EACA;EACA8B,OAAA;IACAC,KAAA;MACA,KAAAL,WAAA;QACAA,WAAA,OAAAM,QAAA;MACA;IACA;IACAC,kBAAAC,IAAA;MACA,KAAAN,OAAA;MACA,KAAAO,OAAA,CAAAC,OAAA;QACAC,KAAA;QACAC,IAAA,EACA,WACAJ,IAAA,CAAAjC,IAAA,GACA,uBAAAgB,MAAA;MACA;IACA;IACAsB,cAAAL,IAAA;MACA,KAAAN,OAAA;MACA,KAAAO,OAAA,CAAAC,OAAA;QACAC,KAAA;QACAC,IAAA,EACA,WACAJ,IAAA,CAAAjC,IAAA,GACA,kBACA,KAAAe,OAAA,GACA;MACA;IACA;IACAwB,aAAA;MACA,KAAAZ,OAAA;MACA;IACA;IACAa,cAAAC,GAAA,EAAAR,IAAA;MACA,KAAAN,OAAA;MACA,IAAAc,GAAA,CAAAC,OAAA;QACA,KAAAhB,YAAA,GAAAe,GAAA,CAAAE,MAAA;QACA,KAAAC,KAAA,eAAAlB,YAAA;QACA,KAAAkB,KAAA,mBAAAlB,YAAA;MACA;QACA,KAAAmB,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAM,OAAA;MACA;IACA;IACAC,YAAAF,KAAA,EAAAb,IAAA,EAAAgB,QAAA;MACA,KAAAtB,OAAA;MACA,KAAAkB,QAAA,CAAAC,KAAA,CAAAA,KAAA,CAAAI,QAAA;IACA;IACAC,aAAAC,CAAA;MACA,KAAAR,KAAA,eAAAlB,YAAA;MACA,KAAAkB,KAAA,mBAAAlB,YAAA;IACA;IACA2B,gBAAAnD,KAAA;MACA,IAAAA,KAAA,UAAAwB,YAAA;QACA;MACA;MACA,KAAAA,YAAA,GAAAxB,KAAA;MACA,KAAA0C,KAAA,mBAAAlB,YAAA;IACA;EACA;EACA4B,KAAA;IACApD,MAAAqD,GAAA;MACA,KAAAF,eAAA,CAAAE,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA1B,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}