{"ast":null,"code":"import { getRoleList, getAllPermissionList, addRole, editRole, deleteRole, setDefaultRole, editRolePerm } from \"./api.js\";\nimport util from \"@/libs/util.js\";\nexport default {\n  name: \"role\",\n  data() {\n    return {\n      loading: true,\n      treeLoading: true,\n      submitPermLoading: false,\n      modalType: 0,\n      roleModalVisible: false,\n      permModalVisible: false,\n      modalTitle: \"\",\n      roleForm: {\n        name: \"\",\n        description: \"\"\n      },\n      roleFormValidate: {\n        name: [{\n          required: true,\n          message: \"角色名称不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      columns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"角色名称\",\n        key: \"name\",\n        minWidth: 150,\n        sortable: true\n      }, {\n        title: \"备注\",\n        key: \"description\",\n        minWidth: 260,\n        sortable: true\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        minWidth: 170,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"创建人\",\n        key: \"createBy\",\n        minWidth: 170,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"更新时间\",\n        key: \"updateTime\",\n        minWidth: 170,\n        sortable: true\n      }, {\n        title: \"最后更新人\",\n        key: \"updateBy\",\n        minWidth: 170,\n        sortable: true\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        align: \"center\",\n        fixed: \"right\",\n        width: 380,\n        render: (h, params) => {\n          var that = this;\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"success\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"ios-brush\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"enable\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.editPerm(params.row);\n              }\n            }\n          }, \"菜单权限\"), h(\"Button\", {\n            props: {\n              type: params.row.defaultRole ? \"primary\" : \"info\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"ios-browsers\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                if (params.row.defaultRole) {\n                  this.cancelDefault(params.row);\n                } else {\n                  this.setDefault(params.row);\n                }\n              }\n            }\n          }, params.row.defaultRole ? \"取消默认\" : \"设为默认\"), h(\"Button\", {\n            props: {\n              type: \"warning\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"md-color-wand\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"edit\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"ios-undo\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      total: 0,\n      permData: [],\n      editRolePermId: \"\",\n      searchForm: {\n        // 搜索框初始化对象\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 15,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      }\n    };\n  },\n  methods: {\n    init() {\n      this.getRoleList();\n      this.getPermList();\n    },\n    renderContent(h, {\n      root,\n      node,\n      data\n    }) {\n      let icon = \"\";\n      if (data.level == 0) {\n        icon = \"ios-navigate\";\n      } else if (data.level == 1) {\n        icon = \"md-list-box\";\n      } else if (data.level == 2) {\n        icon = \"md-list\";\n      } else if (data.level == 3) {\n        icon = \"md-radio-button-on\";\n      } else {\n        icon = \"md-radio-button-off\";\n      }\n      return h(\"span\", {\n        style: {\n          display: \"inline-block\",\n          cursor: \"pointer\"\n        },\n        on: {\n          click: () => {\n            data.checked = !data.checked;\n          }\n        }\n      }, [h(\"span\", [h(\"Icon\", {\n        props: {\n          type: icon,\n          size: \"16\"\n        },\n        style: {\n          \"margin-right\": \"8px\",\n          \"margin-bottom\": \"3px\"\n        }\n      }), h(\"span\", data.title)])]);\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getRoleList();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getRoleList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getRoleList();\n    },\n    getRoleList() {\n      this.loading = true;\n      getRoleList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    getPermList() {\n      this.treeLoading = true;\n      getAllPermissionList().then(res => {\n        if (res.success) {\n          this.deleteDisableNode(res.result);\n          this.permData = res.result;\n          this.treeLoading = false;\n        }\n        this.treeLoading = false;\n      });\n    },\n    // 递归标记禁用节点\n    deleteDisableNode(permData) {\n      let that = this;\n      permData.forEach(function (e) {\n        if (e.status == -1) {\n          e.title = \"[已禁用] \" + e.title;\n          e.disabled = true;\n        }\n        if (e.children && e.children.length > 0) {\n          that.deleteDisableNode(e.children);\n        }\n      });\n    },\n    cancelRole() {\n      this.roleModalVisible = false;\n    },\n    submitRole() {\n      this.$refs.roleForm.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加\n            this.submitLoading = true;\n            addRole(this.roleForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getRoleList();\n                this.roleModalVisible = false;\n              }\n            });\n          } else {\n            this.submitLoading = true;\n            delete this.roleForm.permissions;\n            editRole(this.roleForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getRoleList();\n                this.roleModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    addRoleFx() {\n      this.modalType = 0;\n      this.modalTitle = \"添加角色\";\n      this.$refs.roleForm.resetFields();\n      delete this.roleForm.id;\n      this.roleModalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑角色\";\n      this.$refs.roleForm.resetFields();\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let roleInfo = JSON.parse(str);\n      this.roleForm = roleInfo;\n      this.roleModalVisible = true;\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除角色 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteRole({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    setDefault(v) {\n      this.$Modal.confirm({\n        title: \"确认设置\",\n        content: \"您确认要设置所选的 \" + v.name + \" 为注册用户默认角色?\",\n        loading: true,\n        onOk: () => {\n          let params = {\n            id: v.id,\n            isDefault: true\n          };\n          setDefaultRole(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    cancelDefault(v) {\n      this.$Modal.confirm({\n        title: \"确认取消\",\n        content: \"您确认要取消所选的 \" + v.name + \" 角色为默认?\",\n        loading: true,\n        onOk: () => {\n          let params = {\n            id: v.id,\n            isDefault: false\n          };\n          setDefaultRole(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    editPerm(v) {\n      this.editRolePermId = v.id;\n      this.modalTitle = v.name + \" 菜单权限修改\";\n      let rolePerms = v.permissions;\n      if (this.treeLoading) {\n        this.$Message.warning(\"菜单权限数据加载中，请稍后点击查看\");\n        return;\n      }\n      this.checkPermTree(this.permData, rolePerms);\n      this.permModalVisible = true;\n    },\n    // 递归判断子节点\n    checkPermTree(permData, rolePerms) {\n      let that = this;\n      permData.forEach(function (p) {\n        if (that.hasPerm(p, rolePerms) && p.status != -1) {\n          p.checked = true;\n        } else {\n          p.checked = false;\n        }\n        if (p.children && p.children.length > 0) {\n          that.checkPermTree(p.children, rolePerms);\n        }\n      });\n    },\n    // 判断角色拥有的权限节点勾选\n    hasPerm(p, rolePerms) {\n      let flag = false;\n      for (let i = 0; i < rolePerms.length; i++) {\n        if (p.id == rolePerms[i].permissionId) {\n          flag = true;\n          break;\n        }\n      }\n      if (flag) {\n        return true;\n      }\n      return false;\n    },\n    // 递归全选节点\n    selectedTreeAll(permData, select) {\n      let that = this;\n      permData.forEach(function (e) {\n        e.checked = select;\n        if (e.children && e.children.length > 0) {\n          that.selectedTreeAll(e.children, select);\n        }\n      });\n    },\n    submitPermEdit() {\n      this.submitPermLoading = true;\n      let permIds = \"\";\n      let selectedNodes = this.$refs.tree.getCheckedNodes();\n      selectedNodes.forEach(function (e) {\n        permIds += e.id + \",\";\n      });\n      permIds = permIds.substring(0, permIds.length - 1);\n      editRolePerm({\n        roleId: this.editRolePermId,\n        permIds: permIds\n      }).then(res => {\n        this.submitPermLoading = false;\n        if (res.success) {\n          this.$Message.success(\"操作成功\");\n          this.$store.commit(\"setAdded\", false);\n          util.initRouter(this);\n          this.getRoleList();\n          this.permModalVisible = false;\n        }\n      });\n    },\n    cancelPermEdit() {\n      this.permModalVisible = false;\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["getRoleList","getAllPermissionList","addRole","editRole","deleteRole","setDefaultRole","editRolePerm","util","name","data","loading","treeLoading","submitPermLoading","modalType","roleModalVisible","permModalVisible","modalTitle","roleForm","description","roleFormValidate","required","message","trigger","submitLoading","columns","type","width","align","title","key","minWidth","sortable","sortType","fixed","render","h","params","that","props","size","ghost","shape","icon","disabled","$route","meta","permTypes","includes","style","marginRight","on","click","editPerm","row","defaultRole","cancelDefault","setDefault","edit","remove","total","permData","editRolePermId","searchForm","pageNumber","pageSize","sort","order","methods","init","getPermList","renderContent","root","node","level","display","cursor","checked","changePage","v","changePageSize","changeSort","e","then","res","success","result","records","deleteDisableNode","forEach","status","children","length","cancelRole","submitRole","$refs","validate","valid","$Message","permissions","addRoleFx","resetFields","id","attr","str","JSON","stringify","roleInfo","parse","$Modal","confirm","content","onOk","ids","isDefault","rolePerms","warning","checkPermTree","p","hasPerm","flag","i","permissionId","selectedTreeAll","select","submitPermEdit","permIds","selectedNodes","tree","getCheckedNodes","substring","roleId","$store","commit","initRouter","cancelPermEdit","mounted"],"sources":["src/views/role/role/index.vue"],"sourcesContent":["<template>\r\n<div class=\"search\">\r\n    <Card>\r\n        <Row :gutter=\"16\">\r\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"0\">\r\n                <Form-item label=\"\">\r\n                    <Input type=\"text\" v-model=\"searchForm.name\" placeholder=\"角色名称\" clearable style=\"width: 200px\" />\r\n                </Form-item>\r\n                <Form-item label=\"\">\r\n                    <Input type=\"text\" v-model=\"searchForm.description\" placeholder=\"角色描述\" clearable style=\"width: 200px\" />\r\n                </Form-item>\r\n                <Form-item label=\"\">\r\n                    <Button type=\"success\" @click=\"init\" ghost shape=\"circle\" size=\"small\" icon=\"md-refresh\">搜索</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button @click=\"addRoleFx\" type=\"primary\" ghost shape=\"circle\" size=\"small\" icon=\"md-add\" :disabled=\"!$route.meta.permTypes.includes('delete')\">添加角色</Button>\r\n                </Form-item>\r\n            </Form>\r\n        </Row>\r\n        <Divider dashed />\r\n        <Row :gutter=\"16\">\r\n            <Table :loading=\"loading\" border stripe size=\"small\" :columns=\"columns\" :data=\"data\" ref=\"table\" sortable=\"custom\" @on-sort-change=\"changeSort\"></Table>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n            <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[15,20,50]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n        </Row>\r\n    </Card>\r\n\r\n    <!-- 编辑 -->\r\n    <Modal :title=\"modalTitle\" v-model=\"roleModalVisible\" :mask=\"false\" draggable ok-text=\"保存角色数据\" @on-ok=\"submitRole\" @on-cancel=\"cancelRole\">\r\n        <Form ref=\"roleForm\" :model=\"roleForm\" :label-width=\"80\" :rules=\"roleFormValidate\">\r\n            <Row :gutter=\"16\">\r\n                <Col span=\"24\">\r\n                <FormItem label=\"角色名称\" prop=\"name\">\r\n                    <Input v-model=\"roleForm.name\" placeholder=\"角色的名称,建议以ROLR_开头...\" />\r\n                </FormItem>\r\n                <FormItem label=\"备注\" prop=\"description\">\r\n                    <Input v-model=\"roleForm.description\" />\r\n                </FormItem>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    </Modal>\r\n    <!-- 菜单权限 -->\r\n    <Modal :title=\"modalTitle\" v-model=\"permModalVisible\" :mask=\"false\" draggable ok-text=\"保存菜单权限\" @on-ok=\"submitPermEdit\" @on-cancel=\"cancelPermEdit\">\r\n        <Row :gutter=\"16\">\r\n            <Col span=\"24\" style=\"max-height:500px;overflow-y: scroll;\">\r\n            <Tree ref=\"tree\" :data=\"permData\" show-checkbox :render=\"renderContent\" :check-strictly=\"true\"></Tree>\r\n            <Spin size=\"large\" fix v-if=\"treeLoading\"></Spin>\r\n            </Col>\r\n        </Row>\r\n    </Modal>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    getRoleList,\r\n    getAllPermissionList,\r\n    addRole,\r\n    editRole,\r\n    deleteRole,\r\n    setDefaultRole,\r\n    editRolePerm\r\n} from \"./api.js\";\r\nimport util from \"@/libs/util.js\";\r\nexport default {\r\n    name: \"role\",\r\n    data() {\r\n        return {\r\n            loading: true,\r\n            treeLoading: true,\r\n            submitPermLoading: false,\r\n            modalType: 0,\r\n            roleModalVisible: false,\r\n            permModalVisible: false,\r\n            modalTitle: \"\",\r\n            roleForm: {\r\n                name: \"\",\r\n                description: \"\"\r\n            },\r\n            roleFormValidate: {\r\n                name: [{\r\n                    required: true,\r\n                    message: \"角色名称不能为空\",\r\n                    trigger: \"blur\"\r\n                }]\r\n            },\r\n            submitLoading: false,\r\n            columns: [{\r\n                    type: \"index\",\r\n                    width: 60,\r\n                    align: \"center\"\r\n                },\r\n                {\r\n                    title: \"角色名称\",\r\n                    key: \"name\",\r\n                    minWidth: 150,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    title: \"备注\",\r\n                    key: \"description\",\r\n                    minWidth: 260,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    title: \"创建时间\",\r\n                    key: \"createTime\",\r\n                    minWidth: 170,\r\n                    sortable: true,\r\n                    sortType: \"desc\"\r\n                },\r\n                {\r\n                    title: \"创建人\",\r\n                    key: \"createBy\",\r\n                    minWidth: 170,\r\n                    sortable: true,\r\n                    sortType: \"desc\"\r\n                },\r\n                {\r\n                    title: \"更新时间\",\r\n                    key: \"updateTime\",\r\n                    minWidth: 170,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    title: \"最后更新人\",\r\n                    key: \"updateBy\",\r\n                    minWidth: 170,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    title: \"操作\",\r\n                    key: \"action\",\r\n                    align: \"center\",\r\n                    fixed: \"right\",\r\n                    width: 380,\r\n                    render: (h, params) => {\r\n                        var that = this;\r\n                        return h(\"div\", [\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: \"success\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\",\r\n                                        icon: \"ios-brush\",\r\n                                        disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"enable\"))\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: \"5px\"\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.editPerm(params.row);\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"菜单权限\"\r\n                            ),\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: params.row.defaultRole ? \"primary\" : \"info\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\",\r\n                                        icon: \"ios-browsers\"\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: \"5px\"\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            if (params.row.defaultRole) {\r\n                                                this.cancelDefault(params.row);\r\n                                            } else {\r\n                                                this.setDefault(params.row);\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                },\r\n                                params.row.defaultRole ? \"取消默认\" : \"设为默认\"\r\n                            ),\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: \"warning\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\",\r\n                                        icon: \"md-color-wand\",\r\n                                        disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"edit\"))\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: \"5px\"\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.edit(params.row);\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"编辑\"\r\n                            ),\r\n                            h(\r\n                                \"Button\", {\r\n                                    props: {\r\n                                        type: \"error\",\r\n                                        size: \"small\",\r\n                                        ghost: true,\r\n                                        shape: \"circle\",\r\n                                        icon: \"ios-undo\",\r\n                                        disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.remove(params.row);\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"删除\"\r\n                            )\r\n                        ]);\r\n                    }\r\n                }\r\n            ],\r\n            data: [],\r\n            total: 0,\r\n            permData: [],\r\n            editRolePermId: \"\",\r\n            searchForm: { // 搜索框初始化对象\r\n                pageNumber: 1, // 当前页数\r\n                pageSize: 15, // 页面大小\r\n                sort: \"createTime\", // 默认排序字段\r\n                order: \"desc\", // 默认排序方式\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.getRoleList();\r\n            this.getPermList();\r\n        },\r\n        renderContent(h, {\r\n            root,\r\n            node,\r\n            data\r\n        }) {\r\n            let icon = \"\";\r\n            if (data.level == 0) {\r\n                icon = \"ios-navigate\";\r\n            } else if (data.level == 1) {\r\n                icon = \"md-list-box\";\r\n            } else if (data.level == 2) {\r\n                icon = \"md-list\";\r\n            } else if (data.level == 3) {\r\n                icon = \"md-radio-button-on\";\r\n            } else {\r\n                icon = \"md-radio-button-off\";\r\n            }\r\n            return h(\r\n                \"span\", {\r\n                    style: {\r\n                        display: \"inline-block\",\r\n                        cursor: \"pointer\"\r\n                    },\r\n                    on: {\r\n                        click: () => {\r\n                            data.checked = !data.checked;\r\n                        }\r\n                    }\r\n                },\r\n                [\r\n                    h(\"span\", [\r\n                        h(\"Icon\", {\r\n                            props: {\r\n                                type: icon,\r\n                                size: \"16\"\r\n                            },\r\n                            style: {\r\n                                \"margin-right\": \"8px\",\r\n                                \"margin-bottom\": \"3px\"\r\n                            }\r\n                        }),\r\n                        h(\"span\", data.title)\r\n                    ])\r\n                ]\r\n            );\r\n        },\r\n        changePage(v) {\r\n            this.searchForm.pageNumber = v;\r\n            this.getRoleList();\r\n        },\r\n        changePageSize(v) {\r\n            this.searchForm.pageSize = v;\r\n            this.getRoleList();\r\n        },\r\n        changeSort(e) {\r\n            this.searchForm.sort = e.key;\r\n            this.searchForm.order = e.order;\r\n            if (e.order === \"normal\") {\r\n                this.searchForm.order = \"\";\r\n            }\r\n            this.getRoleList();\r\n        },\r\n        getRoleList() {\r\n            this.loading = true;\r\n            getRoleList(this.searchForm).then(res => {\r\n                this.loading = false;\r\n                if (res.success) {\r\n                    this.data = res.result.records;\r\n                    this.total = res.result.total;\r\n                }\r\n            });\r\n        },\r\n        getPermList() {\r\n            this.treeLoading = true;\r\n            getAllPermissionList().then(res => {\r\n                if (res.success) {\r\n                    this.deleteDisableNode(res.result);\r\n                    this.permData = res.result;\r\n                    this.treeLoading = false;\r\n                }\r\n                this.treeLoading = false;\r\n            });\r\n        },\r\n        // 递归标记禁用节点\r\n        deleteDisableNode(permData) {\r\n            let that = this;\r\n            permData.forEach(function (e) {\r\n                if (e.status == -1) {\r\n                    e.title = \"[已禁用] \" + e.title;\r\n                    e.disabled = true;\r\n                }\r\n                if (e.children && e.children.length > 0) {\r\n                    that.deleteDisableNode(e.children);\r\n                }\r\n            });\r\n        },\r\n        cancelRole() {\r\n            this.roleModalVisible = false;\r\n        },\r\n        submitRole() {\r\n            this.$refs.roleForm.validate(valid => {\r\n                if (valid) {\r\n                    if (this.modalType == 0) {\r\n                        // 添加\r\n                        this.submitLoading = true;\r\n                        addRole(this.roleForm).then(res => {\r\n                            this.submitLoading = false;\r\n                            if (res.success) {\r\n                                this.$Message.success(\"操作成功\");\r\n                                this.getRoleList();\r\n                                this.roleModalVisible = false;\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.submitLoading = true;\r\n                        delete this.roleForm.permissions;\r\n                        editRole(this.roleForm).then(res => {\r\n                            this.submitLoading = false;\r\n                            if (res.success) {\r\n                                this.$Message.success(\"操作成功\");\r\n                                this.getRoleList();\r\n                                this.roleModalVisible = false;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        addRoleFx() {\r\n            this.modalType = 0;\r\n            this.modalTitle = \"添加角色\";\r\n            this.$refs.roleForm.resetFields();\r\n            delete this.roleForm.id;\r\n            this.roleModalVisible = true;\r\n        },\r\n        edit(v) {\r\n            this.modalType = 1;\r\n            this.modalTitle = \"编辑角色\";\r\n            this.$refs.roleForm.resetFields();\r\n            for (let attr in v) {\r\n                if (v[attr] == null) {\r\n                    v[attr] = \"\";\r\n                }\r\n            }\r\n            let str = JSON.stringify(v);\r\n            let roleInfo = JSON.parse(str);\r\n            this.roleForm = roleInfo;\r\n            this.roleModalVisible = true;\r\n        },\r\n        remove(v) {\r\n            this.$Modal.confirm({\r\n                title: \"确认删除\",\r\n                content: \"您确认要删除角色 \" + v.name + \" ?\",\r\n                loading: true,\r\n                onOk: () => {\r\n                    deleteRole({\r\n                        ids: v.id\r\n                    }).then(res => {\r\n                        this.$Modal.remove();\r\n                        if (res.success) {\r\n                            this.$Message.success(\"删除成功\");\r\n                            this.getRoleList();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        setDefault(v) {\r\n            this.$Modal.confirm({\r\n                title: \"确认设置\",\r\n                content: \"您确认要设置所选的 \" + v.name + \" 为注册用户默认角色?\",\r\n                loading: true,\r\n                onOk: () => {\r\n                    let params = {\r\n                        id: v.id,\r\n                        isDefault: true\r\n                    };\r\n                    setDefaultRole(params).then(res => {\r\n                        this.$Modal.remove();\r\n                        if (res.success) {\r\n                            this.$Message.success(\"操作成功\");\r\n                            this.getRoleList();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        cancelDefault(v) {\r\n            this.$Modal.confirm({\r\n                title: \"确认取消\",\r\n                content: \"您确认要取消所选的 \" + v.name + \" 角色为默认?\",\r\n                loading: true,\r\n                onOk: () => {\r\n                    let params = {\r\n                        id: v.id,\r\n                        isDefault: false\r\n                    };\r\n                    setDefaultRole(params).then(res => {\r\n                        this.$Modal.remove();\r\n                        if (res.success) {\r\n                            this.$Message.success(\"操作成功\");\r\n                            this.getRoleList();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        editPerm(v) {\r\n            this.editRolePermId = v.id;\r\n            this.modalTitle = v.name + \" 菜单权限修改\";\r\n            let rolePerms = v.permissions;\r\n            if (this.treeLoading) {\r\n                this.$Message.warning(\"菜单权限数据加载中，请稍后点击查看\");\r\n                return;\r\n            }\r\n            this.checkPermTree(this.permData, rolePerms);\r\n            this.permModalVisible = true;\r\n        },\r\n        // 递归判断子节点\r\n        checkPermTree(permData, rolePerms) {\r\n            let that = this;\r\n            permData.forEach(function (p) {\r\n                if (that.hasPerm(p, rolePerms) && p.status != -1) {\r\n                    p.checked = true;\r\n                } else {\r\n                    p.checked = false;\r\n                }\r\n                if (p.children && p.children.length > 0) {\r\n                    that.checkPermTree(p.children, rolePerms);\r\n                }\r\n            });\r\n        },\r\n        // 判断角色拥有的权限节点勾选\r\n        hasPerm(p, rolePerms) {\r\n            let flag = false;\r\n            for (let i = 0; i < rolePerms.length; i++) {\r\n                if (p.id == rolePerms[i].permissionId) {\r\n                    flag = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (flag) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        // 递归全选节点\r\n        selectedTreeAll(permData, select) {\r\n            let that = this;\r\n            permData.forEach(function (e) {\r\n                e.checked = select;\r\n                if (e.children && e.children.length > 0) {\r\n                    that.selectedTreeAll(e.children, select);\r\n                }\r\n            });\r\n        },\r\n        submitPermEdit() {\r\n            this.submitPermLoading = true;\r\n            let permIds = \"\";\r\n            let selectedNodes = this.$refs.tree.getCheckedNodes();\r\n            selectedNodes.forEach(function (e) {\r\n                permIds += e.id + \",\";\r\n            });\r\n            permIds = permIds.substring(0, permIds.length - 1);\r\n            editRolePerm({\r\n                roleId: this.editRolePermId,\r\n                permIds: permIds\r\n            }).then(res => {\r\n                this.submitPermLoading = false;\r\n                if (res.success) {\r\n                    this.$Message.success(\"操作成功\");\r\n                    this.$store.commit(\"setAdded\", false);\r\n                    util.initRouter(this);\r\n                    this.getRoleList();\r\n                    this.permModalVisible = false;\r\n                }\r\n            });\r\n        },\r\n        cancelPermEdit() {\r\n            this.permModalVisible = false;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"../../../styles/table-common.less\";\r\n\r\n.permModal {\r\n    .ivu-modal-body {\r\n        max-height: 560px;\r\n        overflow: auto;\r\n    }\r\n}\r\n\r\n.depModal {\r\n    .ivu-modal-body {\r\n        max-height: 500px;\r\n        overflow: auto;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}