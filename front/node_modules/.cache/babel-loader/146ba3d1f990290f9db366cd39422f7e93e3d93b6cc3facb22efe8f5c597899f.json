{"ast":null,"code":"import Vue from 'vue';\nimport ViewUI from 'view-design';\nimport 'view-design/dist/styles/iview.css';\nimport App from './App';\nimport { router } from './router/index';\nimport store from './store';\nimport Icon from 'vue-awesome/components/Icon';\nimport { getRequest, postRequest, putRequest, postBodyRequest, getNoAuthRequest, postNoAuthRequest } from '@/libs/axios';\nimport { setStore, getStore, removeStore } from '@/libs/storage';\nimport { format } from \"date-fns\";\nimport util from '@/libs/util';\nimport hasPermission from '@/libs/hasPermission';\nimport hasRole from '@/libs/hasRole';\nimport VueLazyload from 'vue-lazyload';\nimport VueClipboard from 'vue-clipboard2';\nVue.config.silent = true;\nVue.config.productionTip = false;\nVue.use(VueLazyload, {\n  error: require('./assets/img-error.png'),\n  loading: require('./assets/loading2.gif')\n});\nVue.use(ViewUI);\nVue.component('icon', Icon);\nVue.use(VueClipboard);\nVue.use(hasPermission);\nVue.use(hasRole);\nVue.prototype.getRequest = getRequest;\nVue.prototype.postRequest = postRequest;\nVue.prototype.putRequest = putRequest;\nVue.prototype.postBodyRequest = postBodyRequest;\nVue.prototype.getNoAuthRequest = getNoAuthRequest;\nVue.prototype.postNoAuthRequest = postNoAuthRequest;\nVue.prototype.setStore = setStore;\nVue.prototype.getStore = getStore;\nVue.prototype.removeStore = removeStore;\nVue.prototype.format = format;\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App),\n  data: {\n    currentPageName: ''\n  },\n  mounted() {\n    util.initRouter(this);\n    this.currentPageName = this.$route.name;\n    this.$store.commit('setOpenedList');\n    this.$store.commit('initCachepage');\n  }\n});","map":{"version":3,"names":["Vue","ViewUI","App","router","store","Icon","getRequest","postRequest","putRequest","postBodyRequest","getNoAuthRequest","postNoAuthRequest","setStore","getStore","removeStore","format","util","hasPermission","hasRole","VueLazyload","VueClipboard","config","silent","productionTip","use","error","require","loading","component","prototype","el","render","h","data","currentPageName","mounted","initRouter","$route","name","$store","commit"],"sources":["D:/TravelRecommendation/front/src/main.js"],"sourcesContent":["import Vue from 'vue'\r\nimport ViewUI from 'view-design'\r\nimport 'view-design/dist/styles/iview.css'\r\nimport App from './App'\r\nimport { router } from './router/index'\r\nimport store from './store'\r\nimport Icon from 'vue-awesome/components/Icon'\r\nimport { getRequest, postRequest, putRequest, postBodyRequest, getNoAuthRequest, postNoAuthRequest } from '@/libs/axios'\r\nimport { setStore, getStore, removeStore } from '@/libs/storage'\r\nimport { format } from \"date-fns\";\r\nimport util from '@/libs/util'\r\nimport hasPermission from '@/libs/hasPermission'\r\nimport hasRole from '@/libs/hasRole'\r\nimport VueLazyload from 'vue-lazyload'\r\nimport VueClipboard from 'vue-clipboard2'\r\nVue.config.silent = true\r\nVue.config.productionTip = false\r\nVue.use(VueLazyload, {\r\n    error: require('./assets/img-error.png'),\r\n    loading: require('./assets/loading2.gif')\r\n})\r\nVue.use(ViewUI);\r\nVue.component('icon', Icon);\r\nVue.use(VueClipboard);\r\nVue.use(hasPermission);\r\nVue.use(hasRole);\r\nVue.prototype.getRequest = getRequest;\r\nVue.prototype.postRequest = postRequest;\r\nVue.prototype.putRequest = putRequest;\r\nVue.prototype.postBodyRequest = postBodyRequest;\r\nVue.prototype.getNoAuthRequest = getNoAuthRequest;\r\nVue.prototype.postNoAuthRequest = postNoAuthRequest;\r\nVue.prototype.setStore = setStore;\r\nVue.prototype.getStore = getStore;\r\nVue.prototype.removeStore = removeStore;\r\nVue.prototype.format = format;\r\n\r\nnew Vue({\r\n    el: '#app',\r\n    router,\r\n    store,\r\n    render: h => h(App),\r\n    data: {\r\n        currentPageName: ''\r\n    },\r\n    mounted() {\r\n        util.initRouter(this);\r\n        this.currentPageName = this.$route.name;\r\n        this.$store.commit('setOpenedList');\r\n        this.$store.commit('initCachepage');\r\n    }\r\n})\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAO,mCAAmC;AAC1C,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,SAASC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,iBAAiB,QAAQ,cAAc;AACxH,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,gBAAgB;AAChE,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,YAAY,MAAM,gBAAgB;AACzCpB,GAAG,CAACqB,MAAM,CAACC,MAAM,GAAG,IAAI;AACxBtB,GAAG,CAACqB,MAAM,CAACE,aAAa,GAAG,KAAK;AAChCvB,GAAG,CAACwB,GAAG,CAACL,WAAW,EAAE;EACjBM,KAAK,EAAEC,OAAO,CAAC,wBAAwB,CAAC;EACxCC,OAAO,EAAED,OAAO,CAAC,uBAAuB;AAC5C,CAAC,CAAC;AACF1B,GAAG,CAACwB,GAAG,CAACvB,MAAM,CAAC;AACfD,GAAG,CAAC4B,SAAS,CAAC,MAAM,EAAEvB,IAAI,CAAC;AAC3BL,GAAG,CAACwB,GAAG,CAACJ,YAAY,CAAC;AACrBpB,GAAG,CAACwB,GAAG,CAACP,aAAa,CAAC;AACtBjB,GAAG,CAACwB,GAAG,CAACN,OAAO,CAAC;AAChBlB,GAAG,CAAC6B,SAAS,CAACvB,UAAU,GAAGA,UAAU;AACrCN,GAAG,CAAC6B,SAAS,CAACtB,WAAW,GAAGA,WAAW;AACvCP,GAAG,CAAC6B,SAAS,CAACrB,UAAU,GAAGA,UAAU;AACrCR,GAAG,CAAC6B,SAAS,CAACpB,eAAe,GAAGA,eAAe;AAC/CT,GAAG,CAAC6B,SAAS,CAACnB,gBAAgB,GAAGA,gBAAgB;AACjDV,GAAG,CAAC6B,SAAS,CAAClB,iBAAiB,GAAGA,iBAAiB;AACnDX,GAAG,CAAC6B,SAAS,CAACjB,QAAQ,GAAGA,QAAQ;AACjCZ,GAAG,CAAC6B,SAAS,CAAChB,QAAQ,GAAGA,QAAQ;AACjCb,GAAG,CAAC6B,SAAS,CAACf,WAAW,GAAGA,WAAW;AACvCd,GAAG,CAAC6B,SAAS,CAACd,MAAM,GAAGA,MAAM;AAE7B,IAAIf,GAAG,CAAC;EACJ8B,EAAE,EAAE,MAAM;EACV3B,MAAM;EACNC,KAAK;EACL2B,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAC9B,GAAG,CAAC;EACnB+B,IAAI,EAAE;IACFC,eAAe,EAAE;EACrB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNnB,IAAI,CAACoB,UAAU,CAAC,IAAI,CAAC;IACrB,IAAI,CAACF,eAAe,GAAG,IAAI,CAACG,MAAM,CAACC,IAAI;IACvC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,eAAe,CAAC;IACnC,IAAI,CAACD,MAAM,CAACC,MAAM,CAAC,eAAe,CAAC;EACvC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}