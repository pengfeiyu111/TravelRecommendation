{"ast":null,"code":"export default {\n  name: \"iconChoose\",\n  props: {\n    text: {\n      type: String,\n      default: \"提交\"\n    },\n    autoCountDown: {\n      type: Boolean,\n      default: true\n    },\n    countTime: {\n      type: [Number, String],\n      default: 60\n    },\n    suffixText: {\n      type: String,\n      default: \"后重试\"\n    },\n    type: String,\n    size: String,\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    ghost: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    icon: String,\n    shape: String,\n    long: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      buttonText: this.text,\n      count: Number(this.countTime),\n      clicked: false\n    };\n  },\n  methods: {\n    init() {},\n    handleClick() {\n      if (this.autoCountDown) {\n        this.clicked = true;\n        this.countDown();\n      }\n      this.$emit(\"on-click\", true);\n    },\n    startCountDown() {\n      this.clicked = true;\n      this.countDown();\n    },\n    countDown() {\n      let that = this;\n      if (this.count == 0) {\n        this.clicked = false;\n        this.count = this.countTime;\n        this.buttonText = this.text;\n        return;\n      } else {\n        this.buttonText = this.count + \" 秒\" + this.suffixText;\n        this.count--;\n      }\n      setTimeout(function () {\n        that.countDown();\n      }, 1000);\n    },\n    setText(value) {\n      if (value === this.buttonText) {\n        return;\n      }\n      this.buttonText = value;\n    }\n  },\n  watch: {\n    text(val) {\n      this.setText(val);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["name","props","text","type","String","default","autoCountDown","Boolean","countTime","Number","suffixText","size","loading","ghost","disabled","icon","shape","long","data","buttonText","count","clicked","methods","init","handleClick","countDown","$emit","startCountDown","that","setTimeout","setText","value","watch","val","mounted"],"sources":["src/views/template/count-down-button.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <Button :countTime=\"countTime\" :loading=\"loading\" :type=\"type\" :size=\"size\" :ghost=\"ghost\" :disabled=\"disabled||clicked\" :icon=\"icon\" :shape=\"shape\" :long=\"long\" @click=\"handleClick\">{{buttonText}}</Button>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"iconChoose\",\r\n    props: {\r\n        text: {\r\n            type: String,\r\n            default: \"提交\"\r\n        },\r\n        autoCountDown: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        countTime: {\r\n            type: [Number, String],\r\n            default: 60\r\n        },\r\n        suffixText: {\r\n            type: String,\r\n            default: \"后重试\"\r\n        },\r\n        type: String,\r\n        size: String,\r\n        loading: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        ghost: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        icon: String,\r\n        shape: String,\r\n        long: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            buttonText: this.text,\r\n            count: Number(this.countTime),\r\n            clicked: false\r\n        };\r\n    },\r\n    methods: {\r\n        init() {},\r\n        handleClick() {\r\n            if (this.autoCountDown) {\r\n                this.clicked = true;\r\n                this.countDown();\r\n            }\r\n            this.$emit(\"on-click\", true);\r\n        },\r\n        startCountDown() {\r\n            this.clicked = true;\r\n            this.countDown();\r\n        },\r\n        countDown() {\r\n            let that = this;\r\n            if (this.count == 0) {\r\n                this.clicked = false;\r\n                this.count = this.countTime;\r\n                this.buttonText = this.text;\r\n                return;\r\n            } else {\r\n                this.buttonText = this.count + \" 秒\" + this.suffixText;\r\n                this.count--;\r\n            }\r\n            setTimeout(function () {\r\n                that.countDown();\r\n            }, 1000);\r\n        },\r\n        setText(value) {\r\n            if (value === this.buttonText) {\r\n                return;\r\n            }\r\n            this.buttonText = value;\r\n        },\r\n    },\r\n    watch: {\r\n        text(val) {\r\n            this.setText(val);\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n</style>\r\n"],"mappings":"AAOA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,aAAA;MACAH,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAG,SAAA;MACAL,IAAA,GAAAM,MAAA,EAAAL,MAAA;MACAC,OAAA;IACA;IACAK,UAAA;MACAP,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAF,IAAA,EAAAC,MAAA;IACAO,IAAA,EAAAP,MAAA;IACAQ,OAAA;MACAT,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAQ,KAAA;MACAV,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAS,QAAA;MACAX,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAU,IAAA,EAAAX,MAAA;IACAY,KAAA,EAAAZ,MAAA;IACAa,IAAA;MACAd,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;EACA;EACAa,KAAA;IACA;MACAC,UAAA,OAAAjB,IAAA;MACAkB,KAAA,EAAAX,MAAA,MAAAD,SAAA;MACAa,OAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;IACAC,YAAA;MACA,SAAAlB,aAAA;QACA,KAAAe,OAAA;QACA,KAAAI,SAAA;MACA;MACA,KAAAC,KAAA;IACA;IACAC,eAAA;MACA,KAAAN,OAAA;MACA,KAAAI,SAAA;IACA;IACAA,UAAA;MACA,IAAAG,IAAA;MACA,SAAAR,KAAA;QACA,KAAAC,OAAA;QACA,KAAAD,KAAA,QAAAZ,SAAA;QACA,KAAAW,UAAA,QAAAjB,IAAA;QACA;MACA;QACA,KAAAiB,UAAA,QAAAC,KAAA,eAAAV,UAAA;QACA,KAAAU,KAAA;MACA;MACAS,UAAA;QACAD,IAAA,CAAAH,SAAA;MACA;IACA;IACAK,QAAAC,KAAA;MACA,IAAAA,KAAA,UAAAZ,UAAA;QACA;MACA;MACA,KAAAA,UAAA,GAAAY,KAAA;IACA;EACA;EACAC,KAAA;IACA9B,KAAA+B,GAAA;MACA,KAAAH,OAAA,CAAAG,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAX,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}