{"ast":null,"code":"import axios from 'axios';\nimport { getMenuList } from '@/api/index';\nimport lazyLoading from './lazyLoading.js';\nimport router from '@/router/index';\nimport Cookies from \"js-cookie\";\nlet util = {};\nutil.title = function (title) {\n  title = title || '基于协同算法的海南旅游推荐系统';\n  window.document.title = title;\n};\nutil.millsToTime = function (mills) {\n  if (!mills) {\n    return \"\";\n  }\n  let s = mills / 1000;\n  if (s < 60) {\n    return s.toFixed(0) + \" 秒\";\n  }\n  let m = s / 60;\n  if (m < 60) {\n    return m.toFixed(0) + \" 分钟\";\n  }\n  let h = m / 60;\n  if (h < 24) {\n    return h.toFixed(0) + \" 小时\";\n  }\n  let d = h / 24;\n  if (d < 30) {\n    return d.toFixed(0) + \" 天\";\n  }\n  let month = d / 30;\n  if (month < 12) {\n    return month.toFixed(0) + \" 个月\";\n  }\n  let year = month / 12;\n  return year.toFixed(0) + \" 年\";\n};\nutil.inOf = function (arr, targetArr) {\n  let res = true;\n  arr.forEach(item => {\n    if (targetArr.indexOf(item) < 0) {\n      res = false;\n    }\n  });\n  return res;\n};\nutil.oneOf = function (ele, targetArr) {\n  if (targetArr.indexOf(ele) >= 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\nutil.getRouterObjByName = function (routers, name) {\n  if (!name || !routers || !routers.length) {\n    return null;\n  }\n  let routerObj = null;\n  for (let item of routers) {\n    if (item.name == name) {\n      return item;\n    }\n    routerObj = util.getRouterObjByName(item.children, name);\n    if (routerObj) {\n      return routerObj;\n    }\n  }\n  return null;\n};\nutil.handleTitle = function (vm, item) {\n  return item.title;\n};\nutil.setCurrentPath = function (vm, name) {\n  let title = '';\n  let isOtherRouter = false;\n  vm.$store.state.app.routers.forEach(item => {\n    if (item.children.length == 1) {\n      if (item.children[0].name == name) {\n        title = util.handleTitle(vm, item);\n        if (item.name == 'otherRouter') {\n          isOtherRouter = true;\n        }\n      }\n    } else {\n      item.children.forEach(child => {\n        if (child.name == name) {\n          title = util.handleTitle(vm, child);\n          if (item.name == 'otherRouter') {\n            isOtherRouter = true;\n          }\n        }\n      });\n    }\n  });\n  let currentPathArr = [];\n  if (name == 'home_index') {\n    currentPathArr = [{\n      title: util.handleTitle(vm, util.getRouterObjByName(vm.$store.state.app.routers, 'home_index')),\n      path: '',\n      name: 'home_index'\n    }];\n  } else if ((name.indexOf('_index') >= 0 || isOtherRouter) && name !== 'home_index') {\n    currentPathArr = [{\n      title: util.handleTitle(vm, util.getRouterObjByName(vm.$store.state.app.routers, 'home_index')),\n      path: '/home',\n      name: 'home_index'\n    }, {\n      title: title,\n      path: '',\n      name: name\n    }];\n  } else {\n    let currentPathObj = vm.$store.state.app.routers.filter(item => {\n      if (item.children.length <= 1) {\n        return item.children[0].name == name;\n      } else {\n        let i = 0;\n        let childArr = item.children;\n        let len = childArr.length;\n        while (i < len) {\n          if (childArr[i].name == name) {\n            return true;\n          }\n          i++;\n        }\n        return false;\n      }\n    })[0];\n    if (currentPathObj.children.length <= 1 && currentPathObj.name == 'home') {\n      currentPathArr = [{\n        title: '首页',\n        path: '',\n        name: 'home_index'\n      }];\n    } else if (currentPathObj.children.length <= 1 && currentPathObj.name !== 'home') {\n      currentPathArr = [{\n        title: '首页',\n        path: '/home',\n        name: 'home_index'\n      }, {\n        title: currentPathObj.title,\n        path: '',\n        name: name\n      }];\n    } else {\n      let childObj = currentPathObj.children.filter(child => {\n        return child.name == name;\n      })[0];\n      currentPathArr = [{\n        title: '首页',\n        path: '/home',\n        name: 'home_index'\n      }, {\n        title: currentPathObj.title,\n        path: '',\n        name: currentPathObj.name\n      }, {\n        title: childObj.title,\n        path: currentPathObj.path + '/' + childObj.path,\n        name: name\n      }];\n    }\n  }\n  vm.$store.commit('setCurrentPath', currentPathArr);\n  return currentPathArr;\n};\nutil.openNewPage = function (vm, name, argu, query) {\n  if (!vm.$store) {\n    return;\n  }\n  let pageOpenedList = vm.$store.state.app.pageOpenedList;\n  let openedPageLen = pageOpenedList.length;\n  let i = 0;\n  let tagHasOpened = false;\n  while (i < openedPageLen) {\n    if (name == pageOpenedList[i].name) {\n      // 页面已经打开\n      vm.$store.commit('pageOpenedList', {\n        index: i,\n        argu: argu,\n        query: query\n      });\n      tagHasOpened = true;\n      break;\n    }\n    i++;\n  }\n  if (!tagHasOpened) {\n    let tag = vm.$store.state.app.tagsList.filter(item => {\n      if (item.children) {\n        return name == item.children[0].name;\n      } else {\n        return name == item.name;\n      }\n    });\n    tag = tag[0];\n    if (tag) {\n      tag = tag.children ? tag.children[0] : tag;\n      if (argu) {\n        tag.argu = argu;\n      }\n      if (query) {\n        tag.query = query;\n      }\n      vm.$store.commit('increateTag', tag);\n    }\n  }\n  vm.$store.commit('setCurrentPageName', name);\n};\nutil.toDefaultPage = function (routers, name, route, next) {\n  let len = routers.length;\n  let i = 0;\n  let notHandle = true;\n  while (i < len) {\n    if (routers[i].name == name && routers[i].children && routers[i].redirect == undefined) {\n      route.replace({\n        name: routers[i].children[0].name\n      });\n      notHandle = false;\n      next();\n      break;\n    }\n    i++;\n  }\n  if (notHandle) {\n    next();\n  }\n};\n\n// 将Csv文件解析为二维数组\nexport const getArrayFromFile = file => {\n  let nameSplit = file.name.split('.');\n  let format = nameSplit[nameSplit.length - 1];\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    reader.readAsText(file); // 以文本格式读取\n    let arr = [];\n    reader.onload = function (evt) {\n      let data = evt.target.result; // 读到的数据\n      let pasteData = data.trim();\n      arr = pasteData.split(/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g).map(row => {\n        return row.split('\\t');\n      }).map(item => {\n        return item[0].split(',');\n      });\n      if (format == 'csv') resolve(arr);else reject(new Error('[Format Error]:不是Csv文件'));\n    };\n  });\n};\n\n// 将二维数组转为表格数据\nexport const getTableDataFromArray = array => {\n  let columns = [];\n  let tableData = [];\n  if (array.length > 1) {\n    let titles = array.shift();\n    columns = titles.map(item => {\n      return {\n        title: item,\n        key: item\n      };\n    });\n    tableData = array.map(item => {\n      let res = {};\n      item.forEach((col, i) => {\n        res[titles[i]] = col;\n      });\n      return res;\n    });\n  }\n  return {\n    columns,\n    tableData\n  };\n};\nutil.initRouter = function (vm) {\n  const constRoutes = [];\n  const otherRoutes = [];\n\n  // 404路由需要和动态路由一起加载\n  const otherRouter = [{\n    path: '/*',\n    name: 'error-404',\n    meta: {\n      title: '404-页面不存在'\n    },\n    component: 'template/404'\n  }];\n  // 判断用户是否登录\n  let userInfo = Cookies.get('userInfo');\n  if (!userInfo) {\n    // 未登录\n    return;\n  }\n  if (!vm.$store.state.app.added) {\n    // 第一次加载 读取数据\n    let accessToken = window.localStorage.getItem('accessToken');\n    // 加载菜单\n    axios.get(getMenuList, {\n      headers: {\n        'accessToken': accessToken\n      }\n    }).then(res => {\n      let menuData = res.result;\n      if (!menuData) {\n        return;\n      }\n      util.initAllMenuData(constRoutes, menuData);\n      util.initRouterNode(otherRoutes, otherRouter);\n      // 添加所有主界面路由\n      vm.$store.commit('updateAppRouter', constRoutes.filter(item => item.children.length > 0));\n      // 添加全局路由\n      vm.$store.commit('updateDefaultRouter', otherRoutes);\n      // 添加菜单路由\n      util.initMenuData(vm, menuData);\n      // 缓存数据 修改加载标识\n      window.localStorage.setItem('menuData', JSON.stringify(menuData));\n      vm.$store.commit('setAdded', true);\n    });\n  } else {\n    // 读取缓存数据\n    let data = window.localStorage.getItem('menuData');\n    if (!data) {\n      vm.$store.commit('setAdded', false);\n      return;\n    }\n    let menuData = JSON.parse(data);\n    // 添加菜单路由\n    util.initMenuData(vm, menuData);\n  }\n};\n\n// 添加所有顶部导航栏下的菜单路由\nutil.initAllMenuData = function (constRoutes, data) {\n  let allMenuData = [];\n  data.forEach(e => {\n    if (e.type == -1) {\n      e.children.forEach(item => {\n        allMenuData.push(item);\n      });\n    }\n  });\n  util.initRouterNode(constRoutes, allMenuData);\n};\n\n// 生成菜单格式数据\nutil.initMenuData = function (vm, data) {\n  const menuRoutes = [];\n  let menuData = data;\n  // 顶部菜单\n  let navList = [];\n  menuData.forEach(e => {\n    let nav = {\n      name: e.name,\n      title: e.title,\n      icon: e.icon\n    };\n    navList.push(nav);\n  });\n  if (navList.length < 1) {\n    return;\n  }\n  // 存入vuex\n  vm.$store.commit('setNavList', navList);\n  let currNav = window.localStorage.getItem('currNav');\n  if (currNav) {\n    // 读取缓存title\n    for (var item of navList) {\n      if (item.name == currNav) {\n        vm.$store.commit('setCurrNavTitle', item.title);\n        break;\n      }\n    }\n  } else {\n    // 默认第一个\n    currNav = navList[0].name;\n    vm.$store.commit('setCurrNavTitle', navList[0].title);\n  }\n  vm.$store.commit('setCurrNav', currNav);\n  for (var item of menuData) {\n    if (item.name == currNav) {\n      // 过滤\n      menuData = item.children;\n      break;\n    }\n  }\n  util.initRouterNode(menuRoutes, menuData);\n  // 刷新界面菜单\n  vm.$store.commit('updateMenulist', menuRoutes.filter(item => item.children.length > 0));\n  let tagsList = [];\n  vm.$store.state.app.routers.map(item => {\n    if (item.children.length <= 1) {\n      tagsList.push(item.children[0]);\n    } else {\n      tagsList.push(...item.children);\n    }\n  });\n  vm.$store.commit('setTagsList', tagsList);\n};\n\n// 生成路由节点\nutil.initRouterNode = function (routers, data) {\n  for (var item of data) {\n    let menu = Object.assign({}, item);\n    menu.component = lazyLoading(menu.component);\n    if (item.children && item.children.length > 0) {\n      menu.children = [];\n      util.initRouterNode(menu.children, item.children);\n    }\n    let meta = {};\n    // 给页面添加权限、标题、第三方网页链接\n    meta.permTypes = menu.permTypes ? menu.permTypes : null;\n    meta.title = menu.title ? menu.title + \" - 基于协同算法的海南旅游推荐系统\" : null;\n    meta.url = menu.url ? menu.url : null;\n    menu.meta = meta;\n    routers.push(menu);\n  }\n};\nexport default util;","map":{"version":3,"names":["axios","getMenuList","lazyLoading","router","Cookies","util","title","window","document","millsToTime","mills","s","toFixed","m","h","d","month","year","inOf","arr","targetArr","res","forEach","item","indexOf","oneOf","ele","getRouterObjByName","routers","name","length","routerObj","children","handleTitle","vm","setCurrentPath","isOtherRouter","$store","state","app","child","currentPathArr","path","currentPathObj","filter","i","childArr","len","childObj","commit","openNewPage","argu","query","pageOpenedList","openedPageLen","tagHasOpened","index","tag","tagsList","toDefaultPage","route","next","notHandle","redirect","undefined","replace","getArrayFromFile","file","nameSplit","split","format","Promise","resolve","reject","reader","FileReader","readAsText","onload","evt","data","target","result","pasteData","trim","map","row","Error","getTableDataFromArray","array","columns","tableData","titles","shift","key","col","initRouter","constRoutes","otherRoutes","otherRouter","meta","component","userInfo","get","added","accessToken","localStorage","getItem","headers","then","menuData","initAllMenuData","initRouterNode","initMenuData","setItem","JSON","stringify","parse","allMenuData","e","type","push","menuRoutes","navList","nav","icon","currNav","menu","Object","assign","permTypes","url"],"sources":["D:/TravelRecommendation/front/src/libs/util.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getMenuList } from '@/api/index';\r\nimport lazyLoading from './lazyLoading.js';\r\nimport router from '@/router/index';\r\nimport Cookies from \"js-cookie\";\r\n\r\nlet util = {\r\n\r\n};\r\n\r\nutil.title = function (title) {\r\n    title = title || '基于协同算法的海南旅游推荐系统';\r\n    window.document.title = title;\r\n};\r\n\r\nutil.millsToTime = function (mills) {\r\n    if (!mills) {\r\n        return \"\";\r\n    }\r\n    let s = mills / 1000;\r\n    if (s < 60) {\r\n        return s.toFixed(0) + \" 秒\"\r\n    }\r\n    let m = s / 60;\r\n    if (m < 60) {\r\n        return m.toFixed(0) + \" 分钟\"\r\n    }\r\n    let h = m / 60;\r\n    if (h < 24) {\r\n        return h.toFixed(0) + \" 小时\"\r\n    }\r\n    let d = h / 24;\r\n    if (d < 30) {\r\n        return d.toFixed(0) + \" 天\"\r\n    }\r\n    let month = d / 30\r\n    if (month < 12) {\r\n        return month.toFixed(0) + \" 个月\"\r\n    }\r\n    let year = month / 12\r\n    return year.toFixed(0) + \" 年\"\r\n\r\n};\r\n\r\nutil.inOf = function (arr, targetArr) {\r\n    let res = true;\r\n    arr.forEach(item => {\r\n        if (targetArr.indexOf(item) < 0) {\r\n            res = false;\r\n        }\r\n    });\r\n    return res;\r\n};\r\n\r\nutil.oneOf = function (ele, targetArr) {\r\n    if (targetArr.indexOf(ele) >= 0) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nutil.getRouterObjByName = function (routers, name) {\r\n    if (!name || !routers || !routers.length) {\r\n        return null;\r\n    }\r\n    let routerObj = null;\r\n    for (let item of routers) {\r\n        if (item.name == name) {\r\n            return item;\r\n        }\r\n        routerObj = util.getRouterObjByName(item.children, name);\r\n        if (routerObj) {\r\n            return routerObj;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nutil.handleTitle = function (vm, item) {\r\n    return item.title;\r\n};\r\n\r\nutil.setCurrentPath = function (vm, name) {\r\n    let title = '';\r\n    let isOtherRouter = false;\r\n    vm.$store.state.app.routers.forEach(item => {\r\n        if (item.children.length == 1) {\r\n            if (item.children[0].name == name) {\r\n                title = util.handleTitle(vm, item);\r\n                if (item.name == 'otherRouter') {\r\n                    isOtherRouter = true;\r\n                }\r\n            }\r\n        } else {\r\n            item.children.forEach(child => {\r\n                if (child.name == name) {\r\n                    title = util.handleTitle(vm, child);\r\n                    if (item.name == 'otherRouter') {\r\n                        isOtherRouter = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    let currentPathArr = [];\r\n    if (name == 'home_index') {\r\n        currentPathArr = [\r\n            {\r\n                title: util.handleTitle(vm, util.getRouterObjByName(vm.$store.state.app.routers, 'home_index')),\r\n                path: '',\r\n                name: 'home_index'\r\n            }\r\n        ];\r\n    } else if ((name.indexOf('_index') >= 0 || isOtherRouter) && name !== 'home_index') {\r\n        currentPathArr = [\r\n            {\r\n                title: util.handleTitle(vm, util.getRouterObjByName(vm.$store.state.app.routers, 'home_index')),\r\n                path: '/home',\r\n                name: 'home_index'\r\n            },\r\n            {\r\n                title: title,\r\n                path: '',\r\n                name: name\r\n            }\r\n        ];\r\n    } else {\r\n        let currentPathObj = vm.$store.state.app.routers.filter(item => {\r\n            if (item.children.length <= 1) {\r\n                return item.children[0].name == name;\r\n            } else {\r\n                let i = 0;\r\n                let childArr = item.children;\r\n                let len = childArr.length;\r\n                while (i < len) {\r\n                    if (childArr[i].name == name) {\r\n                        return true;\r\n                    }\r\n                    i++;\r\n                }\r\n                return false;\r\n            }\r\n        })[0];\r\n        if (currentPathObj.children.length <= 1 && currentPathObj.name == 'home') {\r\n            currentPathArr = [\r\n                {\r\n                    title: '首页',\r\n                    path: '',\r\n                    name: 'home_index'\r\n                }\r\n            ];\r\n        } else if (currentPathObj.children.length <= 1 && currentPathObj.name !== 'home') {\r\n            currentPathArr = [\r\n                {\r\n                    title: '首页',\r\n                    path: '/home',\r\n                    name: 'home_index'\r\n                },\r\n                {\r\n                    title: currentPathObj.title,\r\n                    path: '',\r\n                    name: name\r\n                }\r\n            ];\r\n        } else {\r\n            let childObj = currentPathObj.children.filter((child) => {\r\n                return child.name == name;\r\n            })[0];\r\n            currentPathArr = [\r\n                {\r\n                    title: '首页',\r\n                    path: '/home',\r\n                    name: 'home_index'\r\n                },\r\n                {\r\n                    title: currentPathObj.title,\r\n                    path: '',\r\n                    name: currentPathObj.name\r\n                },\r\n                {\r\n                    title: childObj.title,\r\n                    path: currentPathObj.path + '/' + childObj.path,\r\n                    name: name\r\n                }\r\n            ];\r\n        }\r\n    }\r\n    vm.$store.commit('setCurrentPath', currentPathArr);\r\n\r\n    return currentPathArr;\r\n};\r\n\r\nutil.openNewPage = function (vm, name, argu, query) {\r\n    if (!vm.$store) {\r\n        return;\r\n    }\r\n    let pageOpenedList = vm.$store.state.app.pageOpenedList;\r\n    let openedPageLen = pageOpenedList.length;\r\n    let i = 0;\r\n    let tagHasOpened = false;\r\n    while (i < openedPageLen) {\r\n        if (name == pageOpenedList[i].name) { // 页面已经打开\r\n            vm.$store.commit('pageOpenedList', {\r\n                index: i,\r\n                argu: argu,\r\n                query: query\r\n            });\r\n            tagHasOpened = true;\r\n            break;\r\n        }\r\n        i++;\r\n    }\r\n    if (!tagHasOpened) {\r\n        let tag = vm.$store.state.app.tagsList.filter((item) => {\r\n            if (item.children) {\r\n                return name == item.children[0].name;\r\n            } else {\r\n                return name == item.name;\r\n            }\r\n        });\r\n        tag = tag[0];\r\n        if (tag) {\r\n            tag = tag.children ? tag.children[0] : tag;\r\n            if (argu) {\r\n                tag.argu = argu;\r\n            }\r\n            if (query) {\r\n                tag.query = query;\r\n            }\r\n            vm.$store.commit('increateTag', tag);\r\n        }\r\n    }\r\n    vm.$store.commit('setCurrentPageName', name);\r\n};\r\n\r\nutil.toDefaultPage = function (routers, name, route, next) {\r\n    let len = routers.length;\r\n    let i = 0;\r\n    let notHandle = true;\r\n    while (i < len) {\r\n        if (routers[i].name == name && routers[i].children && routers[i].redirect == undefined) {\r\n            route.replace({\r\n                name: routers[i].children[0].name\r\n            });\r\n            notHandle = false;\r\n            next();\r\n            break;\r\n        }\r\n        i++;\r\n    }\r\n    if (notHandle) {\r\n        next();\r\n    }\r\n};\r\n\r\n// 将Csv文件解析为二维数组\r\nexport const getArrayFromFile = (file) => {\r\n    let nameSplit = file.name.split('.')\r\n    let format = nameSplit[nameSplit.length - 1]\r\n    return new Promise((resolve, reject) => {\r\n        let reader = new FileReader()\r\n        reader.readAsText(file) // 以文本格式读取\r\n        let arr = []\r\n        reader.onload = function (evt) {\r\n            let data = evt.target.result // 读到的数据\r\n            let pasteData = data.trim()\r\n            arr = pasteData.split((/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g)).map(row => {\r\n                return row.split('\\t')\r\n            }).map(item => {\r\n                return item[0].split(',')\r\n            })\r\n            if (format == 'csv') resolve(arr)\r\n            else reject(new Error('[Format Error]:不是Csv文件'))\r\n        }\r\n    })\r\n}\r\n\r\n// 将二维数组转为表格数据\r\nexport const getTableDataFromArray = (array) => {\r\n    let columns = []\r\n    let tableData = []\r\n    if (array.length > 1) {\r\n        let titles = array.shift()\r\n        columns = titles.map(item => {\r\n            return {\r\n                title: item,\r\n                key: item\r\n            }\r\n        })\r\n        tableData = array.map(item => {\r\n            let res = {}\r\n            item.forEach((col, i) => {\r\n                res[titles[i]] = col\r\n            })\r\n            return res\r\n        })\r\n    }\r\n    return {\r\n        columns,\r\n        tableData\r\n    }\r\n}\r\n\r\nutil.initRouter = function (vm) {\r\n    const constRoutes = [];\r\n    const otherRoutes = [];\r\n\r\n    // 404路由需要和动态路由一起加载\r\n    const otherRouter = [{\r\n        path: '/*',\r\n        name: 'error-404',\r\n        meta: {\r\n            title: '404-页面不存在'\r\n        },\r\n        component: 'template/404'\r\n    }];\r\n    // 判断用户是否登录\r\n    let userInfo = Cookies.get('userInfo')\r\n    if (!userInfo) {\r\n        // 未登录\r\n        return;\r\n    }\r\n    if (!vm.$store.state.app.added) {\r\n        // 第一次加载 读取数据\r\n        let accessToken = window.localStorage.getItem('accessToken');\r\n        // 加载菜单\r\n        axios.get(getMenuList, { headers: { 'accessToken': accessToken } }).then(res => {\r\n            let menuData = res.result;\r\n            if (!menuData) {\r\n                return;\r\n            }\r\n            util.initAllMenuData(constRoutes, menuData);\r\n            util.initRouterNode(otherRoutes, otherRouter);\r\n            // 添加所有主界面路由\r\n            vm.$store.commit('updateAppRouter', constRoutes.filter(item => item.children.length > 0));\r\n            // 添加全局路由\r\n            vm.$store.commit('updateDefaultRouter', otherRoutes);\r\n            // 添加菜单路由\r\n            util.initMenuData(vm, menuData);\r\n            // 缓存数据 修改加载标识\r\n            window.localStorage.setItem('menuData', JSON.stringify(menuData));\r\n            vm.$store.commit('setAdded', true);\r\n        });\r\n    } else {\r\n        // 读取缓存数据\r\n        let data = window.localStorage.getItem('menuData');\r\n        if (!data) {\r\n            vm.$store.commit('setAdded', false);\r\n            return;\r\n        }\r\n        let menuData = JSON.parse(data);\r\n        // 添加菜单路由\r\n        util.initMenuData(vm, menuData);\r\n    }\r\n};\r\n\r\n// 添加所有顶部导航栏下的菜单路由\r\nutil.initAllMenuData = function (constRoutes, data) {\r\n\r\n    let allMenuData = [];\r\n    data.forEach(e => {\r\n        if (e.type == -1) {\r\n            e.children.forEach(item => {\r\n                allMenuData.push(item);\r\n            })\r\n        }\r\n    })\r\n    util.initRouterNode(constRoutes, allMenuData);\r\n}\r\n\r\n// 生成菜单格式数据\r\nutil.initMenuData = function (vm, data) {\r\n    const menuRoutes = [];\r\n    let menuData = data;\r\n    // 顶部菜单\r\n    let navList = [];\r\n    menuData.forEach(e => {\r\n        let nav = {\r\n            name: e.name,\r\n            title: e.title,\r\n            icon: e.icon\r\n        }\r\n        navList.push(nav);\r\n    })\r\n    if (navList.length < 1) {\r\n        return;\r\n    }\r\n    // 存入vuex\r\n    vm.$store.commit('setNavList', navList);\r\n    let currNav = window.localStorage.getItem('currNav')\r\n    if (currNav) {\r\n        // 读取缓存title\r\n        for (var item of navList) {\r\n            if (item.name == currNav) {\r\n                vm.$store.commit('setCurrNavTitle', item.title);\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        // 默认第一个\r\n        currNav = navList[0].name;\r\n        vm.$store.commit('setCurrNavTitle', navList[0].title);\r\n    }\r\n    vm.$store.commit('setCurrNav', currNav);\r\n    for (var item of menuData) {\r\n        if (item.name == currNav) {\r\n            // 过滤\r\n            menuData = item.children;\r\n            break;\r\n        }\r\n    }\r\n    util.initRouterNode(menuRoutes, menuData);\r\n    // 刷新界面菜单\r\n    vm.$store.commit('updateMenulist', menuRoutes.filter(item => item.children.length > 0));\r\n\r\n    let tagsList = [];\r\n    vm.$store.state.app.routers.map((item) => {\r\n        if (item.children.length <= 1) {\r\n            tagsList.push(item.children[0]);\r\n        } else {\r\n            tagsList.push(...item.children);\r\n        }\r\n    });\r\n    vm.$store.commit('setTagsList', tagsList);\r\n};\r\n\r\n// 生成路由节点\r\nutil.initRouterNode = function (routers, data) {\r\n\r\n    for (var item of data) {\r\n        let menu = Object.assign({}, item);\r\n        menu.component = lazyLoading(menu.component);\r\n\r\n        if (item.children && item.children.length > 0) {\r\n            menu.children = [];\r\n            util.initRouterNode(menu.children, item.children);\r\n        }\r\n\r\n        let meta = {};\r\n        // 给页面添加权限、标题、第三方网页链接\r\n        meta.permTypes = menu.permTypes ? menu.permTypes : null;\r\n        meta.title = menu.title ? menu.title + \" - 基于协同算法的海南旅游推荐系统\" : null;\r\n        meta.url = menu.url ? menu.url : null;\r\n        menu.meta = meta;\r\n\r\n        routers.push(menu);\r\n    }\r\n};\r\n\r\nexport default util;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}