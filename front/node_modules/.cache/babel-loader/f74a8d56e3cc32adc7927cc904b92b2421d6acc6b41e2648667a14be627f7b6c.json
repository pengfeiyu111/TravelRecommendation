{"ast":null,"code":"import { Pie, measureTextWidth } from '@antv/g2plot';\nimport { getAntvVoList } from './api.js';\nexport default {\n  name: \"test-page\",\n  components: {},\n  props: {},\n  data() {\n    return {\n      depCountData: [{\n        title: '零食类',\n        value: 27\n      }, {\n        title: '冷冻类',\n        value: 25\n      }, {\n        title: '烟酒类',\n        value: 18\n      }, {\n        title: '生鲜类',\n        value: 15\n      }, {\n        title: '散装类',\n        value: 10\n      }, {\n        title: '水果类',\n        value: 5\n      }],\n      piePlot: {}\n    };\n  },\n  methods: {\n    init() {\n      this.initAntvFx();\n      this.getAntvVoListFx();\n    },\n    getAntvVoListFx() {\n      var that = this;\n      getAntvVoList().then(res => {\n        if (res.success) {\n          that.piePlot.changeData(res.result);\n        }\n      });\n    },\n    renderStatistic(containerWidth, text, style) {\n      const {\n        width: textWidth,\n        height: textHeight\n      } = measureTextWidth(text, style);\n      const R = containerWidth / 2;\n      let scale = 1;\n      if (containerWidth < textWidth) {\n        scale = Math.min(Math.sqrt(Math.abs(Math.pow(R, 2) / (Math.pow(textWidth / 2, 2) + Math.pow(textHeight, 2)))), 1);\n      }\n      const textStyleStr = `width:${containerWidth}px;`;\n      return `<div style=\"${textStyleStr};font-size:${scale}em;line-height:${scale < 1 ? 1 : 'inherit'};\">${text}</div>`;\n    },\n    initAntvFx() {\n      var that = this;\n      var data = this.depCountData;\n      this.piePlot = new Pie('container', {\n        appendPadding: 10,\n        data,\n        angleField: 'value',\n        colorField: 'title',\n        radius: 1,\n        innerRadius: 0.64,\n        meta: {\n          value: {\n            formatter: v => `${v} `\n          }\n        },\n        label: {\n          type: 'inner',\n          offset: '-50%',\n          style: {\n            textAlign: 'center'\n          },\n          autoRotate: false,\n          content: '{value}'\n        },\n        statistic: {\n          title: {\n            offsetY: -4,\n            customHtml: (container, view, datum) => {\n              const {\n                width,\n                height\n              } = container.getBoundingClientRect();\n              const d = Math.sqrt(Math.pow(width / 2, 2) + Math.pow(height / 2, 2));\n              const text = datum ? datum.title : '教师工资分布图';\n              return that.renderStatistic(d, text, {\n                fontSize: 28\n              });\n            }\n          },\n          content: {\n            offsetY: 4,\n            style: {\n              fontSize: '32px'\n            },\n            customHtml: (container, view, datum, data) => {\n              const {\n                width\n              } = container.getBoundingClientRect();\n              const text = datum ? ` ${datum.value}元` : ` ${data.reduce((r, d) => r + d.value, 0)}元`;\n              return that.renderStatistic(width, text, {\n                fontSize: 32\n              });\n            }\n          }\n        },\n        // 添加 中心统计文本 交互\n        interactions: [{\n          type: 'element-selected'\n        }, {\n          type: 'element-active'\n        }, {\n          type: 'pie-statistic-active'\n        }]\n      });\n      this.piePlot.render();\n      this.piePlot.on('element:click', args => {\n        that.getPieUserItemFx(args.data.data.title);\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["Pie","measureTextWidth","getAntvVoList","name","components","props","data","depCountData","title","value","piePlot","methods","init","initAntvFx","getAntvVoListFx","that","then","res","success","changeData","result","renderStatistic","containerWidth","text","style","width","textWidth","height","textHeight","R","scale","Math","min","sqrt","abs","pow","textStyleStr","appendPadding","angleField","colorField","radius","innerRadius","meta","formatter","v","label","type","offset","textAlign","autoRotate","content","statistic","offsetY","customHtml","container","view","datum","getBoundingClientRect","d","fontSize","reduce","r","interactions","render","on","args","getPieUserItemFx","mounted"],"sources":["src/views/demo/antvActive/index.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <Alert type=\"success\" show-icon banner>温馨提示：该图数据来源自教师模块，即数据展示模块下的复杂表格样例！</Alert>\r\n    <div id=\"container\"></div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    Pie,\r\n    measureTextWidth\r\n} from '@antv/g2plot';\r\nimport {\r\n    getAntvVoList\r\n} from './api.js';\r\nexport default {\r\n    name: \"test-page\",\r\n    components: {},\r\n    props: {},\r\n    data() {\r\n        return {\r\n            depCountData: [{\r\n                    title: '零食类',\r\n                    value: 27\r\n                },\r\n                {\r\n                    title: '冷冻类',\r\n                    value: 25\r\n                },\r\n                {\r\n                    title: '烟酒类',\r\n                    value: 18\r\n                },\r\n                {\r\n                    title: '生鲜类',\r\n                    value: 15\r\n                },\r\n                {\r\n                    title: '散装类',\r\n                    value: 10\r\n                },\r\n                {\r\n                    title: '水果类',\r\n                    value: 5\r\n                }\r\n            ],\r\n            piePlot: {},\r\n        }\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.initAntvFx();\r\n            this.getAntvVoListFx();\r\n        },\r\n        getAntvVoListFx() {\r\n            var that = this;\r\n            getAntvVoList().then(res => {\r\n                if(res.success) {\r\n                    that.piePlot.changeData(res.result);\r\n                }\r\n            })\r\n        },\r\n        renderStatistic(containerWidth, text, style) {\r\n            const {\r\n                width: textWidth,\r\n                height: textHeight\r\n            } = measureTextWidth(text, style);\r\n            const R = containerWidth / 2;\r\n            let scale = 1;\r\n            if (containerWidth < textWidth) {\r\n                scale = Math.min(Math.sqrt(Math.abs(Math.pow(R, 2) / (Math.pow(textWidth / 2, 2) + Math.pow(textHeight, 2)))), 1);\r\n            }\r\n            const textStyleStr = `width:${containerWidth}px;`;\r\n            return `<div style=\"${textStyleStr};font-size:${scale}em;line-height:${scale < 1 ? 1 : 'inherit'};\">${text}</div>`;\r\n        },\r\n        initAntvFx() {\r\n            var that = this;\r\n            var data = this.depCountData;\r\n            this.piePlot = new Pie('container', {\r\n                appendPadding: 10,\r\n                data,\r\n                angleField: 'value',\r\n                colorField: 'title',\r\n                radius: 1,\r\n                innerRadius: 0.64,\r\n                meta: {\r\n                    value: {\r\n                        formatter: (v) => `${v} `,\r\n                    },\r\n                },\r\n                label: {\r\n                    type: 'inner',\r\n                    offset: '-50%',\r\n                    style: {\r\n                        textAlign: 'center',\r\n                    },\r\n                    autoRotate: false,\r\n                    content: '{value}',\r\n                },\r\n                statistic: {\r\n                    title: {\r\n                        offsetY: -4,\r\n                        customHtml: (container, view, datum) => {\r\n                            const {\r\n                                width,\r\n                                height\r\n                            } = container.getBoundingClientRect();\r\n                            const d = Math.sqrt(Math.pow(width / 2, 2) + Math.pow(height / 2, 2));\r\n                            const text = datum ? datum.title : '教师工资分布图';\r\n                            return that.renderStatistic(d, text, {\r\n                                fontSize: 28\r\n                            });\r\n                        },\r\n                    },\r\n                    content: {\r\n                        offsetY: 4,\r\n                        style: {\r\n                            fontSize: '32px',\r\n                        },\r\n                        customHtml: (container, view, datum, data) => {\r\n                            const {\r\n                                width\r\n                            } = container.getBoundingClientRect();\r\n                            const text = datum ? ` ${datum.value}元` : ` ${data.reduce((r, d) => r + d.value, 0)}元`;\r\n                            return that.renderStatistic(width, text, {\r\n                                fontSize: 32\r\n                            });\r\n                        },\r\n                    },\r\n                },\r\n                // 添加 中心统计文本 交互\r\n                interactions: [{\r\n                    type: 'element-selected'\r\n                }, {\r\n                    type: 'element-active'\r\n                }, {\r\n                    type: 'pie-statistic-active'\r\n                }],\r\n            });\r\n            this.piePlot.render();\r\n            this.piePlot.on('element:click', (args) => {\r\n                that.getPieUserItemFx(args.data.data.title);\r\n            });\r\n        },\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#container {\r\n    width: 100%;\r\n    height: 700px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.antvTitle {\r\n    font-size: 20px;\r\n    text-align: center;\r\n    justify-content: center;\r\n    display: flex;\r\n\r\n    .antvSecondTitle {\r\n        color: #ff9900;\r\n        font-size: 22px;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}