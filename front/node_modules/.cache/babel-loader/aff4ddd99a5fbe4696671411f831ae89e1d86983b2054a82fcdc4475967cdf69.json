{"ast":null,"code":"import { icons } from \"@/libs/icon\";\nexport default {\n  name: \"iconChoose\",\n  props: {\n    value: {\n      type: String,\n      default: \"\"\n    },\n    size: String,\n    placeholder: {\n      type: String,\n      default: \"输入图标名或选择图标\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    maxlength: Number,\n    icon: {\n      type: String,\n      default: \"md-ionic\"\n    }\n  },\n  data() {\n    return {\n      iconModalVisible: false,\n      currentValue: this.value,\n      iconData: [],\n      key: \"\",\n      tip: \"输入英文关键词搜索，比如 success\"\n    };\n  },\n  methods: {\n    init() {\n      let re = [];\n      icons.forEach(e => {\n        e.icons.forEach(item => {\n          re.push(item);\n        });\n      });\n      this.iconData = re;\n    },\n    handleInput() {\n      if (this.key) {\n        // 搜索\n        let re = [];\n        icons.forEach(e => {\n          e.tags.forEach(item => {\n            if (item.indexOf(this.key) >= 0) {\n              e.icons.forEach(r => {\n                re.push(r);\n              });\n            }\n          });\n        });\n        this.iconData = re;\n      } else {\n        this.init();\n      }\n    },\n    handleFocus() {\n      if (!this.key) {\n        this.tip = \"\";\n      }\n    },\n    handleBlur() {\n      if (!this.key) {\n        this.tip = \"输入英文关键词搜索，比如 success\";\n      }\n    },\n    handleChange(v) {\n      this.$emit(\"input\", this.currentValue);\n      this.$emit(\"on-change\", this.currentValue);\n    },\n    setCurrentValue(value) {\n      if (value === this.currentValue) {\n        return;\n      }\n      this.currentValue = value;\n    },\n    hanleChoose(v) {\n      this.currentValue = v;\n      this.$emit(\"input\", this.currentValue);\n      this.$emit(\"on-change\", this.currentValue);\n      this.iconModalVisible = false;\n    }\n  },\n  watch: {\n    value(val) {\n      this.setCurrentValue(val);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["icons","name","props","value","type","String","default","size","placeholder","disabled","Boolean","readonly","maxlength","Number","icon","data","iconModalVisible","currentValue","iconData","key","tip","methods","init","re","forEach","e","item","push","handleInput","tags","indexOf","r","handleFocus","handleBlur","handleChange","v","$emit","setCurrentValue","hanleChoose","watch","val","mounted"],"sources":["src/views/template/icon-choose.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <div style=\"display:flex\">\r\n        <Input v-model=\"currentValue\" @on-change=\"handleChange\" :placeholder=\"placeholder\" :size=\"size\" :disabled=\"disabled\" :readonly=\"readonly\" :maxlength=\"maxlength\" :icon=\"currentValue\" />\r\n        <Button @click=\"iconModalVisible=true\" :size=\"size\" :disabled=\"disabled\" :icon=\"icon\" style=\"margin-left:10px\">选择图标</Button>\r\n    </div>\r\n\r\n    <Modal title=\"选择图标\" v-model=\"iconModalVisible\" :width=\"950\" :styles=\"{top: '30px'}\" footer-hide :z-index=\"1060\">\r\n        <div class=\"icon-search\">\r\n            <input type=\"text\" v-model=\"key\" :placeholder=\"tip\" @input=\"handleInput\" @focus=\"handleFocus\" @blur=\"handleBlur\">\r\n        </div>\r\n        <div class=\"icon-block icon-bar\">\r\n            <div class=\"icon-wrap\" v-for=\"(item, i) in iconData\" :key=\"i\" @click=\"hanleChoose(item)\">\r\n                <div class=\"icons-item\">\r\n                    <Icon :type=\"item\" style=\"font-size: 32px;\" />\r\n                    <p>{{item}}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    icons\r\n} from \"@/libs/icon\";\r\nexport default {\r\n    name: \"iconChoose\",\r\n    props: {\r\n        value: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        size: String,\r\n        placeholder: {\r\n            type: String,\r\n            default: \"输入图标名或选择图标\"\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        readonly: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        maxlength: Number,\r\n        icon: {\r\n            type: String,\r\n            default: \"md-ionic\"\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            iconModalVisible: false,\r\n            currentValue: this.value,\r\n            iconData: [],\r\n            key: \"\",\r\n            tip: \"输入英文关键词搜索，比如 success\"\r\n        };\r\n    },\r\n    methods: {\r\n        init() {\r\n            let re = [];\r\n            icons.forEach(e => {\r\n                e.icons.forEach(item => {\r\n                    re.push(item);\r\n                });\r\n            });\r\n            this.iconData = re;\r\n        },\r\n        handleInput() {\r\n            if (this.key) {\r\n                // 搜索\r\n                let re = [];\r\n                icons.forEach(e => {\r\n                    e.tags.forEach(item => {\r\n                        if (item.indexOf(this.key) >= 0) {\r\n                            e.icons.forEach(r => {\r\n                                re.push(r);\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                this.iconData = re;\r\n            } else {\r\n                this.init();\r\n            }\r\n        },\r\n        handleFocus() {\r\n            if (!this.key) {\r\n                this.tip = \"\";\r\n            }\r\n        },\r\n        handleBlur() {\r\n            if (!this.key) {\r\n                this.tip = \"输入英文关键词搜索，比如 success\";\r\n            }\r\n        },\r\n        handleChange(v) {\r\n            this.$emit(\"input\", this.currentValue);\r\n            this.$emit(\"on-change\", this.currentValue);\r\n        },\r\n        setCurrentValue(value) {\r\n            if (value === this.currentValue) {\r\n                return;\r\n            }\r\n            this.currentValue = value;\r\n        },\r\n        hanleChoose(v) {\r\n            this.currentValue = v;\r\n            this.$emit(\"input\", this.currentValue);\r\n            this.$emit(\"on-change\", this.currentValue);\r\n            this.iconModalVisible = false;\r\n        }\r\n    },\r\n    watch: {\r\n        value(val) {\r\n            this.setCurrentValue(val);\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.icon-search {\r\n    position: relative;\r\n    margin: 20px auto 30px;\r\n    text-align: center;\r\n\r\n    input {\r\n        width: 500px;\r\n        box-sizing: border-box;\r\n        border: 0;\r\n        border-radius: 4px;\r\n        background: #f5f5f5;\r\n        text-align: center;\r\n        font-size: 14px;\r\n        outline: none;\r\n        margin: 0 auto;\r\n        padding: 8px 0;\r\n    }\r\n}\r\n\r\n.icon-block {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    max-height: 500px;\r\n    overflow: auto;\r\n}\r\n\r\n.icon-bar {\r\n    overflow: auto;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.icon-bar::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n}\r\n\r\n.icon-bar::-webkit-scrollbar-thumb {\r\n    border-radius: 3px;\r\n    background: #c3c3c3;\r\n}\r\n\r\n.icon-bar::-webkit-scrollbar-track {\r\n    background: #fff;\r\n}\r\n\r\n.icon-wrap {\r\n    :hover {\r\n        color: #1890ff;\r\n        transition: color 0.3s;\r\n    }\r\n}\r\n\r\n.icons-item {\r\n    margin: 6px 6px 6px 0;\r\n    width: 145px;\r\n    text-align: center;\r\n    list-style: none;\r\n    cursor: pointer;\r\n    height: 100px;\r\n    color: #5c6b77;\r\n    transition: all 0.2s ease;\r\n    position: relative;\r\n    padding-top: 10px;\r\n\r\n    p {\r\n        padding-top: 15px;\r\n        margin: 5px;\r\n        font-size: 14px;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"AAwBA,SACAA,KAAA,QACA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,IAAA,EAAAF,MAAA;IACAG,WAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAG,QAAA;MACAL,IAAA,EAAAM,OAAA;MACAJ,OAAA;IACA;IACAK,QAAA;MACAP,IAAA,EAAAM,OAAA;MACAJ,OAAA;IACA;IACAM,SAAA,EAAAC,MAAA;IACAC,IAAA;MACAV,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAS,KAAA;IACA;MACAC,gBAAA;MACAC,YAAA,OAAAd,KAAA;MACAe,QAAA;MACAC,GAAA;MACAC,GAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,IAAAC,EAAA;MACAvB,KAAA,CAAAwB,OAAA,CAAAC,CAAA;QACAA,CAAA,CAAAzB,KAAA,CAAAwB,OAAA,CAAAE,IAAA;UACAH,EAAA,CAAAI,IAAA,CAAAD,IAAA;QACA;MACA;MACA,KAAAR,QAAA,GAAAK,EAAA;IACA;IACAK,YAAA;MACA,SAAAT,GAAA;QACA;QACA,IAAAI,EAAA;QACAvB,KAAA,CAAAwB,OAAA,CAAAC,CAAA;UACAA,CAAA,CAAAI,IAAA,CAAAL,OAAA,CAAAE,IAAA;YACA,IAAAA,IAAA,CAAAI,OAAA,MAAAX,GAAA;cACAM,CAAA,CAAAzB,KAAA,CAAAwB,OAAA,CAAAO,CAAA;gBACAR,EAAA,CAAAI,IAAA,CAAAI,CAAA;cACA;YACA;UACA;QACA;QACA,KAAAb,QAAA,GAAAK,EAAA;MACA;QACA,KAAAD,IAAA;MACA;IACA;IACAU,YAAA;MACA,UAAAb,GAAA;QACA,KAAAC,GAAA;MACA;IACA;IACAa,WAAA;MACA,UAAAd,GAAA;QACA,KAAAC,GAAA;MACA;IACA;IACAc,aAAAC,CAAA;MACA,KAAAC,KAAA,eAAAnB,YAAA;MACA,KAAAmB,KAAA,mBAAAnB,YAAA;IACA;IACAoB,gBAAAlC,KAAA;MACA,IAAAA,KAAA,UAAAc,YAAA;QACA;MACA;MACA,KAAAA,YAAA,GAAAd,KAAA;IACA;IACAmC,YAAAH,CAAA;MACA,KAAAlB,YAAA,GAAAkB,CAAA;MACA,KAAAC,KAAA,eAAAnB,YAAA;MACA,KAAAmB,KAAA,mBAAAnB,YAAA;MACA,KAAAD,gBAAA;IACA;EACA;EACAuB,KAAA;IACApC,MAAAqC,GAAA;MACA,KAAAH,eAAA,CAAAG,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAnB,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}