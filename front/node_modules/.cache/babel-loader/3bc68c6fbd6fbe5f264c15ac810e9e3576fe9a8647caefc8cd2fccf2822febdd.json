{"ast":null,"code":"import { getTopEvaluate } from \"./api.js\";\nimport { Bar } from '@antv/g2plot';\nexport default {\n  name: \"test-page\",\n  components: {},\n  props: {},\n  data() {\n    return {\n      stackedBarPlot: {},\n      userData: [{\n        title: 'AAA',\n        value: 6\n      }, {\n        title: 'BBB',\n        value: 4\n      }]\n    };\n  },\n  methods: {\n    init() {\n      this.getTopEvaluateFx();\n    },\n    getTopEvaluateFx() {\n      var that = this;\n      var data = [];\n      getTopEvaluate().then(res => {\n        console.log(res);\n        if (res.success) {\n          for (var i = 0; i < res.result.length; i++) {\n            var item = {};\n            item.title = res.result[i].title;\n            item.value = res.result[i].star;\n            data.push(item);\n          }\n          that.stackedBarPlot = new Bar('container31', {\n            data,\n            xField: 'value',\n            yField: 'title',\n            seriesField: 'title',\n            legend: {\n              position: 'top-left'\n            }\n          });\n          that.stackedBarPlot.render();\n        }\n      });\n    },\n    initAntvFx() {\n      var data = this.userData;\n      this.stackedBarPlot = new Bar('container30', {\n        data,\n        xField: 'value',\n        yField: 'title',\n        seriesField: 'title',\n        legend: {\n          position: 'top-left'\n        }\n      });\n      this.stackedBarPlot.render();\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["getTopEvaluate","Bar","name","components","props","data","stackedBarPlot","userData","title","value","methods","init","getTopEvaluateFx","that","then","res","console","log","success","i","result","length","item","star","push","xField","yField","seriesField","legend","position","render","initAntvFx","mounted"],"sources":["src/views/spot/scenicSpot/rank2.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Card>\r\n            <Row :gutter=\"16\">\r\n                <span style=\"font-weight: 550;font-size: 26px;\">海南旅游景点评分 TOP 10</span>\r\n            </Row>\r\n            <Row :gutter=\"16\">\r\n                <Col span=\"24\">\r\n                <div id=\"container31\"></div>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    import {\r\n        getTopEvaluate\r\n    } from \"./api.js\";\r\n    import {\r\n        Bar\r\n    } from '@antv/g2plot';\r\n    export default {\r\n        name: \"test-page\",\r\n        components: {},\r\n        props: {},\r\n        data() {\r\n            return {\r\n                stackedBarPlot: {},\r\n                userData: [{\r\n                    title: 'AAA',\r\n                    value: 6,\r\n                }, {\r\n                    title: 'BBB',\r\n                    value: 4,\r\n                }, ]\r\n            }\r\n        },\r\n        methods: {\r\n            init() {\r\n                this.getTopEvaluateFx();\r\n            },\r\n            getTopEvaluateFx() {\r\n                var that = this;\r\n                var data = [];\r\n                getTopEvaluate().then(res => {\r\n                    console.log(res);\r\n                    if (res.success) {\r\n                        for (var i = 0; i < res.result.length; i++) {\r\n                            var item = {};\r\n                            item.title = res.result[i].title;\r\n                            item.value = res.result[i].star;\r\n                            data.push(item);\r\n                        }\r\n                        that.stackedBarPlot = new Bar('container31', {\r\n                            data,\r\n                            xField: 'value',\r\n                            yField: 'title',\r\n                            seriesField: 'title',\r\n                            legend: {\r\n                                position: 'top-left',\r\n                            },\r\n                        });\r\n                        that.stackedBarPlot.render();\r\n                    }\r\n                })\r\n            },\r\n            initAntvFx() {\r\n                var data = this.userData;\r\n                this.stackedBarPlot = new Bar('container30', {\r\n                    data,\r\n                    xField: 'value',\r\n                    yField: 'title',\r\n                    seriesField: 'title',\r\n                    legend: {\r\n                        position: 'top-left',\r\n                    },\r\n                });\r\n                this.stackedBarPlot.render();\r\n            },\r\n        },\r\n        mounted() {\r\n            this.init();\r\n        },\r\n    };\r\n    </script>\r\n    \r\n    <style lang=\"less\" scoped>\r\n    #container31 {\r\n        width: 100%;\r\n        height: 500px;\r\n        margin-top: 20px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n    }\r\n    \r\n    .antvTitle {\r\n        font-size: 26px;\r\n        text-align: center;\r\n        justify-content: center;\r\n        display: flex;\r\n    }\r\n    </style>\r\n    "],"mappings":"AAgBA,SACAA,cAAA,QACA;AACA,SACAC,GAAA,QACA;AACA;EACAC,IAAA;EACAC,UAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,QAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,KAAAC,gBAAA;IACA;IACAA,iBAAA;MACA,IAAAC,IAAA;MACA,IAAAR,IAAA;MACAL,cAAA,GAAAc,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,IAAAA,GAAA,CAAAG,OAAA;UACA,SAAAC,CAAA,MAAAA,CAAA,GAAAJ,GAAA,CAAAK,MAAA,CAAAC,MAAA,EAAAF,CAAA;YACA,IAAAG,IAAA;YACAA,IAAA,CAAAd,KAAA,GAAAO,GAAA,CAAAK,MAAA,CAAAD,CAAA,EAAAX,KAAA;YACAc,IAAA,CAAAb,KAAA,GAAAM,GAAA,CAAAK,MAAA,CAAAD,CAAA,EAAAI,IAAA;YACAlB,IAAA,CAAAmB,IAAA,CAAAF,IAAA;UACA;UACAT,IAAA,CAAAP,cAAA,OAAAL,GAAA;YACAI,IAAA;YACAoB,MAAA;YACAC,MAAA;YACAC,WAAA;YACAC,MAAA;cACAC,QAAA;YACA;UACA;UACAhB,IAAA,CAAAP,cAAA,CAAAwB,MAAA;QACA;MACA;IACA;IACAC,WAAA;MACA,IAAA1B,IAAA,QAAAE,QAAA;MACA,KAAAD,cAAA,OAAAL,GAAA;QACAI,IAAA;QACAoB,MAAA;QACAC,MAAA;QACAC,WAAA;QACAC,MAAA;UACAC,QAAA;QACA;MACA;MACA,KAAAvB,cAAA,CAAAwB,MAAA;IACA;EACA;EACAE,QAAA;IACA,KAAArB,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}