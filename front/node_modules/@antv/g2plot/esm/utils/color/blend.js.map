{"version":3,"file":"blend.js","sourceRoot":"","sources":["../../../src/utils/color/blend.ts"],"names":[],"mappings":"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","sourcesContent":["import colorUtil from '@antv/color-util';\n/*\n * interpolates between a set of colors uzing a bezier spline\n * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n */\n\nconst each =\n  (f) =>\n  (c0: number[], c1: number[]): number[] => {\n    const out = [];\n    out[0] = f(c0[0], c1[0]);\n    out[1] = f(c0[1], c1[1]);\n    out[2] = f(c0[2], c1[2]);\n    return out;\n  };\n\n/**\n * 混合方法集合\n */\nconst blendObject = {\n  normal: (a: number) => a,\n  multiply: (a: number, b: number) => (a * b) / 255,\n  screen: (a: number, b: number) => 255 * (1 - (1 - a / 255) * (1 - b / 255)),\n  overlay: (a: number, b: number) => (b < 128 ? (2 * a * b) / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255))),\n  darken: (a: number, b: number) => (a > b ? b : a),\n  lighten: (a: number, b: number) => (a > b ? a : b),\n  dodge: (a: number, b: number) => {\n    if (a === 255) return 255;\n    a = (255 * (b / 255)) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n  },\n  burn: (a: number, b: number) => {\n    // 参考 w3c 的写法，考虑除数为 0 的情况\n    if (b === 255) return 255;\n    else if (a === 0) return 0;\n    else return 255 * (1 - Math.min(1, (1 - b / 255) / (a / 255)));\n  },\n};\n\n/**\n * 获取混合方法\n */\nexport const innerBlend = (mode: string) => {\n  if (!blendObject[mode]) {\n    throw new Error('unknown blend mode ' + mode);\n  }\n  return blendObject[mode];\n};\n\n/**\n * 混合颜色，并处理透明度情况\n * 参考：https://www.w3.org/TR/compositing/#blending\n * @param c0\n * @param c1\n * @param mode 混合模式\n * @return rbga\n */\nexport function blend(c0: string, c1: string, mode = 'normal') {\n  // blendRgbArr: 生成不考虑透明度的 blend color: [r, g, b]\n  const blendRgbArr = each(innerBlend(mode))(colorToArr(c0), colorToArr(c1));\n\n  const [r0, g0, b0, a0] = colorToArr(c0);\n  const [r1, g1, b1, a1] = colorToArr(c1);\n\n  const a = Number((a0 + a1 * (1 - a0)).toFixed(2));\n\n  const r = Math.round(\n    ((a0 * (1 - a1) * (r0 / 255) + a0 * a1 * (blendRgbArr[0] / 255) + (1 - a0) * a1 * (r1 / 255)) / a) * 255\n  );\n  const g = Math.round(\n    ((a0 * (1 - a1) * (g0 / 255) + a0 * a1 * (blendRgbArr[1] / 255) + (1 - a0) * a1 * (g1 / 255)) / a) * 255\n  );\n  const b = Math.round(\n    ((a0 * (1 - a1) * (b0 / 255) + a0 * a1 * (blendRgbArr[2] / 255) + (1 - a0) * a1 * (b1 / 255)) / a) * 255\n  );\n\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n\n/**\n * 统一颜色输入的格式 [r, g, b, a]\n * 参考：https://www.w3.org/TR/compositing/#blending\n * @param c color\n * @return [r, g, b, a]\n */\nexport function colorToArr(c: string): number[] {\n  const color = c.replace('/s+/g', ''); // 去除所有空格\n  let rgbaArr: any[];\n\n  // 'red' -> [r, g, b, 1]\n  if (typeof color === 'string' && !color.startsWith('rgba') && !color.startsWith('#')) {\n    return (rgbaArr = colorUtil.rgb2arr(colorUtil.toRGB(color)).concat([1]));\n  }\n\n  // rgba(255, 200, 125, 0.5) -> [r, g, b, a]\n  if (color.startsWith('rgba')) rgbaArr = color.replace('rgba(', '').replace(')', '').split(',');\n\n  // '#fff000' -> [r, g, b, 1]\n  if (color.startsWith('#')) rgbaArr = colorUtil.rgb2arr(color).concat([1]); // 如果是 16 进制（6 位数），默认透明度 1\n\n  // [r, g, b, a] 前三位取整\n  return rgbaArr.map((item, index) => (index === 3 ? Number(item) : item | 0));\n}\n"]}