{"version":3,"file":"marker-active.js","sourceRoot":"","sources":["../../../../src/plots/line/interactions/marker-active.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AAC7C,OAAO,EAAE,iBAAiB,EAAkB,MAAM,UAAU,CAAC;AAE7D;IAAwC,sCAAiB;IAAzD;;IA8BA,CAAC;IA7BQ,mCAAM,GAAb;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC/B,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,iCAAiC;YACzB,IAAA,OAAK,GAAK,GAAG,CAAC,IAAI,MAAb,CAAc;YAC3B,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,KAAK,OAAO,EAArB,CAAqB,CAAC,CAAC;YACvE,IAAI,CAAC,MAAM,EAAE,UAAC,KAAe;gBAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,OAAO;oBAC3B,IAAM,MAAM,GAAG,SAAS,CAAC,OAAK,EAAE,UAAC,IAAI,IAAK,OAAC,IAAY,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAnC,CAAmC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACtF,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEM,kCAAK,GAAZ;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,KAAK,OAAO,EAArB,CAAqB,CAAC,CAAC;QACvE,IAAI,CAAC,MAAM,EAAE,UAAC,KAAe;YAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,OAAO;gBAC3B,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,oCAAO,GAAf;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IAC3B,CAAC;IACH,yBAAC;AAAD,CAAC,AA9BD,CAAwC,iBAAiB,GA8BxD","sourcesContent":["import { each, findIndex } from '@antv/util';\nimport { InteractionAction, View, Geometry } from '@antv/g2';\n\nexport class MarkerActiveAction extends InteractionAction {\n  public active() {\n    const view = this.getView();\n    const evt = this.context.event;\n    if (evt.data) {\n      // items: 数组对象，当前 tooltip 显示的每条内容\n      const { items } = evt.data;\n      const points = view.geometries.filter((geom) => geom.type === 'point');\n      each(points, (point: Geometry) => {\n        each(point.elements, (element) => {\n          const active = findIndex(items, (item) => (item as any).data === element.data) !== -1;\n          element.setState('active', active);\n        });\n      });\n    }\n  }\n\n  public reset() {\n    const view = this.getView();\n    const points = view.geometries.filter((geom) => geom.type === 'point');\n    each(points, (point: Geometry) => {\n      each(point.elements, (element) => {\n        element.setState('active', false);\n      });\n    });\n  }\n\n  private getView(): View {\n    return this.context.view;\n  }\n}\n"]}