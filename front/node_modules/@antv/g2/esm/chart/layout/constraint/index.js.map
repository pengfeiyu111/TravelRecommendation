{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/chart/layout/constraint/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC","sourcesContent":["/*\n\n> 先做一个针对 G2 场景的极简版本，只有 EQ，而没有不等式的！\n\n```ts\nimport { Solver, Constraint, Bounds, Operator } from './constraint';\n\nconst solver = new Solver();\n\nconst b1 = new Bounds();\nconst b2 = new Bounds();\n\n// -1 * b1.x + b2.width - 200 = 0\nconst c1 = new Constraint(Operator.EQ, [-1， b1.x], b2.width, -200);\n// -1 * b1.x + b1.width - 400 < 0\nconst c2 = new Constraint(Operator.LT, [-1， b1.x], b1.width, -400);\n\nsolver.addConstraint(c1, c2);\n\n// get the b1 b2's layout information\nconst layout = solver.calc();\n```\n\n */\n\nexport { Solver } from './solver';\nexport { Bounds } from './bounds';\nexport { Variable } from './variable';\nexport { Constraint } from './constraint';\nexport { Operator } from './types';\n"]}